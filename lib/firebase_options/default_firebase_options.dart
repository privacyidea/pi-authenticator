// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Netknights [DefaultFirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatformOf('netknights'),
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions currentPlatformOf(String? app) => switch (app) {
        //'netknights' => NetknightsFirebaseOptions.currentPlatform,
        _ => defaultCurrentPlatform,
      };
  static FirebaseOptions get defaultCurrentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'DEFAULT_FIREBASE_API_KEY',
    appId: 'DEFAULT_FIREBASE_APP_ID',
    messagingSenderId: 'DEFAULT_FIREBASE_MESSAGING_SENDER_ID',
    projectId: 'DEFAULT_FIREBASE_PROJECT_ID',
    storageBucket: 'DEFAULT_FIREBASE_STORAGE_BUCKET',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'DEFAULT_FIREBASE_API_KEY',
    appId: 'DEFAULT_FIREBASE_APP_ID',
    messagingSenderId: 'DEFAULT_FIREBASE_MESSAGING_SENDER_ID',
    projectId: 'DEFAULT_FIREBASE_PROJECT_ID',
    storageBucket: 'DEFAULT_FIREBASE_STORAGE_BUCKET',
    iosClientId: 'DEFAULT_FIREBASE_IOS_CLIENT_ID',
    iosBundleId: 'DEFAULT_FIREBASE_IOS_BUNDLE_ID',
  );
}
