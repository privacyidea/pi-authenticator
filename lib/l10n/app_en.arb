{
  "@@last_modified": "2024-11-18",
  "@@locale": "en",
  "@a11yAddFolderButton": {
    "description": "Buttontext to add a new folder."
  },
  "@a11yAddTokenManuallyButton": {
    "description": "Title of the screen where tokens are created manually."
  },
  "@a11yCloseSearchTokensButton": {
    "description": "A11y label for the button to close the search tokens field."
  },
  "@a11yLicensesButton": {
    "description": "Title of the licenses screen."
  },
  "@a11yPushTokensButton": {
    "description": "A11y label for the push tokens button."
  },
  "@a11yScanQrCodeButton": {
    "description": "Accessibility label for the button to scan qr-codes."
  },
  "@a11yScanQrCodeViewActive": {
    "description": "A11y label for the scan qr code view when the camera is active."
  },
  "@a11yScanQrCodeViewFlashlightOff": {
    "description": "A11y label for the flash light button of the scan qr code view when the flashlight is off."
  },
  "@a11yScanQrCodeViewFlashlightOn": {
    "description": "A11y label for the flash light button of the scan qr code view when the flashlight is on."
  },
  "@a11yScanQrCodeViewGallery": {
    "description": "A11y label for the gallery button of the scan qr code view."
  },
  "@a11yScanQrCodeViewInactive": {
    "description": "A11y label for the scan qr code view when the camera is not active."
  },
  "@a11ySearchTokensButton": {
    "description": "A11y label for the search tokens input field."
  },
  "@a11ySecondsUntilNextOTP": {
    "description": "A11y label for the animated countdown until the next OTP is generated.",
    "placeholders": {
      "seconds": {
        "example": "30",
        "type": "int"
      }
    }
  },
  "@a11ySettingsButton": {
    "description": "Accessibility label for the button to open the settings page."
  },
  "@accept": {
    "description": "Label for e.g. a button. Something gets accepted by the user."
  },
  "@addANewFolder": {
    "description": "Title of the dialog where a new folder can be added."
  },
  "@addSystemInfo": {
    "description": "Description of the checkbox to add system information to the error report."
  },
  "@addToken": {
    "description": "The button to open the screen to add tokens by hand."
  },
  "@additionalErrorMessage": {
    "description": "Label for the box where the user can write somthing about the error."
  },
  "@algorithm": {
    "description": "Title of the dropdown button where the encoding is selected."
  },
  "@algorithmUnsupported": {
    "description": "Error message when the algorithm is not supported.",
    "placeholders": {
      "algorithm": {
        "example": "MD5",
        "type": "String"
      }
    }
  },
  "@allTokensSynchronized": {
    "description": "Content of the push synchronization dialog. Signaling the user that everything worked."
  },
  "@asFile": {
    "description": "Buttontext to save the backup as a file."
  },
  "@asQrCode": {
    "description": "Buttontext to export the token as a qr code."
  },
  "@askLogSentDescription": {
    "description": "The content of the dialog that asks the user if he sent the error log."
  },
  "@authNotSupportedBody": {
    "description": "Message shown as a dialog body that tells the user that device credentials or biometrics must be setup for this action."
  },
  "@authNotSupportedTitle": {
    "description": "Message shown as a dialog title that tells the user that device credentials or biometrics must be setup for this action."
  },
  "@authToAcceptPushRequest": {
    "description": "Message to accepting a push request for authentication."
  },
  "@authToDeclinePushRequest": {
    "description": "Message for declining a push request for authentication."
  },
  "@authToDiscardPushRequest": {
    "description": "Message for discarding a push request for authentication."
  },
  "@authenticateToShowOtp": {
    "description": "Reason to authenticate when trying to view a one time password."
  },
  "@authenticateToUnLockToken": {
    "description": "Reason to authenticate when trying to lock or unlock a token."
  },
  "@authentication": {
    "description": "Title of the authentication dialog."
  },
  "@biometricHint": {
    "description": "Hint message advising the user how to authenticate with biometrics. It is used on Android side. Maximum 60 characters."
  },
  "@biometricNotRecognized": {
    "description": "Message to let the user know that authentication was failed. It is used on Android side. Maximum 60 characters."
  },
  "@biometricRequiredTitle": {
    "description": "Message showed as a title in a dialog which indicates the user has not set up biometric authentication on their device. It is used on Android side. Maximum 60 characters."
  },
  "@biometricSuccess": {
    "description": "Message to let the user know that authentication was successful. It is used on Android side. Maximum 60 characters."
  },
  "@butDiscardIt": {
    "description": "Smaller text for the button to discard the push request."
  },
  "@cancel": {
    "description": "Button to cancel an action."
  },
  "@cannotNavigateWithoutContext": {
    "description": "Error message when the user tries to navigate to a screen without providing the necessary context."
  },
  "@checkServerCertificate": {
    "description": "Error message when the server certificate should be checked."
  },
  "@checkYourNetwork": {
    "description": "Tells the user to check the network connection."
  },
  "@clearErrorLog": {
    "description": "Button to clear the error log."
  },
  "@clipboardEmpty": {
    "description": "Status message when trying to copy from an empty clipboard."
  },
  "@confirmDeletion": {
    "description": "Title of the dialog where a token can be deleted."
  },
  "@confirmDeletionOf": {
    "description": "Asks for confirmation on deleting a token.",
    "placeholders": {
      "name": {
        "example": "PUSH1234",
        "type": "String"
      }
    },
    "type": "text"
  },
  "@confirmFolderDeletionHint": {
    "description": "Gives the user a hint about the consequences of deleting a folder."
  },
  "@confirmPassword": {
    "description": "Title of the input field where the user has to confirm the password."
  },
  "@confirmTokenDeletionHint": {
    "description": "Gives the user a hint about the consequences of deleting a token."
  },
  "@confirmation": {
    "description": "Title of the confirmation dialog."
  },
  "@connectionFailed": {
    "description": "Tells the user that the connection failed."
  },
  "@container": {
    "description": "Title for the container view."
  },
  "@containerAlreadyExists": {
    "description": "Title of the dialog that tells the user that the container already exists."
  },
  "@containerDeleteCorrespondingTokenDialogContent": {
    "description": "Content of the dialog that asks the user if they want to delete the corresponding tokens."
  },
  "@containerDetails": {
    "description": "Title of the container details dialog."
  },
  "@containerRolloutExpired": {
    "description": "Message when a container has expired and can not be rolled out anymore",
    "placeholders": {
      "serial": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@containerRolloutSendDeviceInfoDialogContent": {
    "description": "Content of the dialog that asks the user if they want to send device information."
  },
  "@containerRolloutSendDeviceInfoDialogTitle": {
    "description": "Title of the dialog that asks the user if they want to send device information."
  },
  "@containerSerial": {
    "description": "Title of the container serial field."
  },
  "@containerSyncDialogNewTokens": {
    "description": "The title of the part of the dialog that tells the user that new tokens were added."
  },
  "@containerSyncDialogRemovedTokens": {
    "description": "The title of the part of the dialog that tells the user that tokens were removed."
  },
  "@containerSyncDialogTitle": {
    "description": "Title of the add container Dialog",
    "placeholders": {
      "serial": {
        "example": "SMPH0008CC47",
        "type": "String"
      }
    }
  },
  "@containerSyncUrl": {
    "description": "Title of the container sync URL field."
  },
  "@containerTransferDeleteTokensButtonText": {
    "description": "Button text to delete corresponding tokens after container transfer."
  },
  "@containerTransferDeleteTokensSuccessMessage": {
    "description": "Message when a container and its corresponding tokens have been successfully removed from the device."
  },
  "@containerTransferDialogContentAborted": {
    "description": "Content of the dialog that tells the user that the container transfer was aborted."
  },
  "@continueButton": {
    "description": "Button to continue an action."
  },
  "@copyOTPToClipboard": {
    "description": "A11y label for the button to copy the otp value to the clipboard."
  },
  "@couldNotConnectToServer": {
    "description": "Error message when the connection to the server could not be established."
  },
  "@couldNotFindGlobalRef": {
    "description": "Error message when a global reference could not be found."
  },
  "@couldNotFindTokenForWidgetId": {
    "description": "Error message when a token could not be found for a widget id.",
    "placeholders": {
      "id": {
        "example": "1234",
        "type": "String"
      }
    }
  },
  "@couldNotSignMessage": {
    "description": "Tells the user that the message could not be signed."
  },
  "@counter": {
    "description": "Describes the field where the tokens counter should be entered."
  },
  "@create": {
    "description": "Buttontext to create something e.g. a Folder."
  },
  "@createdAt": {
    "description": "Label for the creation date of the token."
  },
  "@creator": {
    "description": "Label for the creator of the token."
  },
  "@dayPasswordValidFor": {
    "description": "Text for the trailing part of the day password token."
  },
  "@dayPasswordValidUntil": {
    "description": "Text for the trailing part of the day password token."
  },
  "@decline": {
    "description": "Label for e.g. a button. Something gets declined by the user."
  },
  "@declineIt": {
    "description": "Smaller text for the button to decline the push request."
  },
  "@decrypt": {
    "description": "Buttontext to decrypt the tokens."
  },
  "@decryptErrorButtonDelete": {
    "description": "Buttontext to delete all tokens when they could not be decrypted."
  },
  "@decryptErrorButtonRetry": {
    "description": "Buttontext to retry decrypting the tokens when a decryption error occurred."
  },
  "@decryptErrorButtonSendError": {
    "description": "Buttontext to send an error report when a decryption error occurred."
  },
  "@decryptErrorContent": {
    "description": "Dialog content when the tokens could not be decrypted."
  },
  "@decryptErrorDeleteConfirmationContent": {
    "description": "Content of the dialog that ensures the user wants to delete all tokens."
  },
  "@decryptErrorTitle": {
    "description": "Title of the dialog when the tokens could not be decrypted."
  },
  "@delete": {
    "description": "Label that describes deleting the token."
  },
  "@deleteAllButtonText": {
    "description": "Button text to delete corresponding tokens after container deletion."
  },
  "@deleteContainerDialogContent": {
    "description": "Content of the dialog that ensures the user wants to delete a container."
  },
  "@deleteContainerDialogTitle": {
    "description": "Title of the dialog where a container can be deleted.",
    "placeholders": {
      "serial": {
        "example": "SMPH0008CC47",
        "type": "String"
      }
    }
  },
  "@deleteLockedToken": {
    "description": "Text for the authentication dialog when the user wants to delete a locked token."
  },
  "@deleteOnlyContainerButtonText": {
    "description": "Button text to delete only the container not the corresponding tokens."
  },
  "@details": {
    "description": "Title of the details action Button."
  },
  "@deviceCredentialsRequiredTitle": {
    "description": "Message showed as a title in a dialog which indicates the user has not set up credentials authentication on their device. It is used on Android side. Maximum 60 characters."
  },
  "@deviceCredentialsSetupDescription": {
    "description": "Used for 'deviceCredentialsSetupDescription' of 'AndroidAuthMessages'"
  },
  "@digits": {
    "description": "Title of the dropdown button where the number of digits for the opt value is selected."
  },
  "@dismiss": {
    "description": "Text of a button that closes a dialog."
  },
  "@done": {
    "description": "Buttontext for finishing an action."
  },
  "@edit": {
    "description": "Label for the edit action."
  },
  "@editLockedToken": {
    "description": "Text for the authentication dialog when the user wants to edit a locked token."
  },
  "@editToken": {
    "description": "Title for the edit token dialog."
  },
  "@enablePolling": {
    "description": "Name of the setting switch that enables polling."
  },
  "@encoding": {
    "description": "Title of the dropdown button where the encoding is selected."
  },
  "@enterDetailsForToken": {
    "description": "Title of the screen where tokens are created manually, tells the user to enter all required values."
  },
  "@enterLink": {
    "description": "Buttontext for the import type link."
  },
  "@enterPassphraseDialogHint": {
    "description": "Hint of the Textfield in the enter passphrase Dialog"
  },
  "@enterPassphraseDialogTitle": {
    "description": "Title of the enter passphrase Dialog"
  },
  "@enterPasswordToEncrypt": {
    "description": "Content of the dialog where the user has to enter a password to encrypt the tokens."
  },
  "@errorLogCleared": {
    "description": "Message that tells the user that the error log was cleared."
  },
  "@errorLogEmpty": {
    "description": "Message that tells the user that the error log is empty."
  },
  "@errorLogTitle": {
    "description": "Title of the error log screen."
  },
  "@errorMailBody": {
    "description": "Message for email body"
  },
  "@errorMissingPrivateKey": {
    "description": "Error message when the private key is missing."
  },
  "@errorRollOutFailed": {
    "description": "Tells the user that the token could not be rolled out, because a network error occurred.",
    "placeholders": {
      "name": {
        "example": "PUSH1234A",
        "type": "String"
      }
    },
    "type": "text"
  },
  "@errorRollOutNoConnectionToServer": {
    "description": "Tells the user that the roll-out failed because the server could not be reached.",
    "placeholders": {
      "name": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@errorRollOutNotPossibleAnymore": {
    "description": "Tells the user that the roll-out and not possible anymore for some reason."
  },
  "@errorRollOutSSLHandshakeFailed": {
    "description": "Tells the user that the roll-out failed because the SSL handshake failed."
  },
  "@errorRollOutUnknownError": {
    "description": "Tells the user that the roll-out failed because of an unknown error.",
    "placeholders": {
      "e": {
        "example": "IllegalArgumentException on Line 5 ...",
        "type": "String"
      }
    },
    "type": "text"
  },
  "@errorRolloverNotAllowed": {
    "description": "Error message when the rollover for a container is not allowed."
  },
  "@errorSavingFile": {
    "description": "Tells the user that the file could not be saved."
  },
  "@errorSynchronizationNoNetworkConnection": {
    "description": "Tells the user that synchronizing the push tokens failed because the server could not be reached."
  },
  "@errorTokenExpired": {
    "description": "The submessage (reason) of “errorRollOutNotPossibleAnymore“ that tells the user that the token is expired.",
    "placeholders": {
      "name": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@errorUnlinkingPushToken": {
    "description": "Error message when unlinking a push token failed.",
    "placeholders": {
      "label": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@errorUnregisterNotAllowed": {
    "description": "Error message when unregistering for a container is not allowed."
  },
  "@errorWhenPullingChallenges": {
    "description": "errorWhenPullingChallenges",
    "placeholders": {
      "name": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@exampleUrl": {
    "description": "Shows the user an example of a valid URL."
  },
  "@expandLockedFolder": {
    "description": "Text for the authentication dialog when the user wants to expand a locked folder."
  },
  "@export": {
    "description": "Buttontext to export tokens."
  },
  "@exportAllTokens": {
    "description": "Description of the checkbox to export all tokens."
  },
  "@exportLockedTokenReason": {
    "description": "Text for the authentication dialog when the user wants to export a locked token."
  },
  "@exportNonPrivacyIDEATokens": {
    "description": "Buttontext to export non privacyIDEA tokens."
  },
  "@exportOneMore": {
    "description": "Button to export one more token."
  },
  "@exportTokens": {
    "description": "Title of the export Tokens dialog."
  },
  "@exportTokensHintDialogTitle": {
    "description": "Title of the dialog that informs the user about the export of tokens."
  },
  "@exportingTokens": {
    "description": "Text for the loading indicator when exporting tokens."
  },
  "@failedToFinalizeContainer": {
    "description": "Error message when finalizing a container failed.",
    "placeholders": {
      "serial": {
        "example": "SMPH0008CC47",
        "type": "String"
      }
    }
  },
  "@failedToLoad": {
    "description": "Error message when something could not be loaded.",
    "placeholders": {
      "name": {
        "example": "token data",
        "type": "String"
      }
    }
  },
  "@failedToRenewSecrets": {
    "description": "Error message when the secrets of the tokens could not be renewed."
  },
  "@failedToSyncContainer": {
    "placeholders": {
      "serial": {
        "example": "SMPH0008CC47",
        "type": "String"
      }
    }
  },
  "@feedback": {
    "description": "Text for the feedback button and view title of the feedback screen."
  },
  "@feedbackDescription": {
    "description": "Description for the feedback screen."
  },
  "@feedbackHint": {
    "description": "Descripes waht happens when the user clicks on the send button."
  },
  "@feedbackPrivacyPolicy1": {
    "description": "First part of the text that tells the user that he agrees to the privacy policy by sending feedback."
  },
  "@feedbackPrivacyPolicy2": {
    "description": "Taping on this should open the privacy policy."
  },
  "@feedbackPrivacyPolicy3": {
    "description": "Last part of the text that tells the user that he agrees to the privacy policy by sending feedback."
  },
  "@feedbackSentDescription": {
    "description": "The content of the dialog that appears after the feedback was sent."
  },
  "@feedbackSentTitle": {
    "description": "The Title of the dialog that appears after the feedback was sent."
  },
  "@feedbackTitle": {
    "description": "First big line of the feedback screen."
  },
  "@fileNotAvailable": {
    "description": "Error message when the file is not available."
  },
  "@fileSavedToDownloadsFolder": {
    "description": "Tells the user that the file was saved to the downloads folder."
  },
  "@finalizationState": {
    "description": "Title of the finalization state field."
  },
  "@finalizeContainerFailed": {
    "description": "Text for the error message when finalizing a container failed for some reason."
  },
  "@firebaseToken": {
    "description": "Label for the field where the firebase token is shown."
  },
  "@folderName": {
    "description": "Label for the input field where the folder name should be entered."
  },
  "@forceDeleteDialogContent": {
    "description": "Content of the dialog that tells the user that the server was unreachable and asks if the user wants to delete the container anyway."
  },
  "@generatingPhonePart": {
    "description": "Title of a dialog telling the user that the phone part gets generated right now."
  },
  "@gitHubButton": {
    "description": "Buttontext to open the GitHub page."
  },
  "@goToSettingsButton": {
    "description": "Message showed on a button that the user can click to go to settings pages from the current dialog. It is used on both Android and iOS side. Maximum 30 characters."
  },
  "@goToSettingsDescription": {
    "description": "Tells the user that they need to set up device credentials in the device's settings."
  },
  "@grantCameraPermissionDialogButton": {
    "description": "Buttontext to grant the camera permission."
  },
  "@grantCameraPermissionDialogContent": {
    "description": "Content of the dialog that asks the user to grant the camera permission."
  },
  "@grantCameraPermissionDialogPermanentlyDenied": {
    "description": "Description for the permanently denied camera permission."
  },
  "@grantCameraPermissionDialogTitle": {
    "description": "Title of the dialog that asks the user to grant the camera permission."
  },
  "@handshakeFailed": {
    "description": "Error message when the handshake failed."
  },
  "@handshakeFailedLongText": {
    "description": "Error message when the handshake with the server failed."
  },
  "@hidePushTokens": {
    "description": "Label for the switch to hide push tokens."
  },
  "@hidePushTokensDescription": {
    "description": "Descripes what happens when the user hides the push tokens."
  },
  "@httpStatus": {
    "description": "HTTP status code",
    "placeholders": {
      "httpCode": {
        "example": "404",
        "type": "String"
      }
    }
  },
  "@imageUrl": {
    "description": "Title of the image URL field."
  },
  "@importConflictToken": {
    "description": "Title for the section where the user can see the conflicting tokens.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@importExistingToken": {
    "description": "Title for the section where the user can see the tokens that already exist.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@importExportTokens": {
    "description": "Title of the import/export settings group."
  },
  "@importFailedToken": {
    "description": "Title for the section where the user can see the tokens that could not be imported.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@importHint2FAS": {
    "description": "Tells the user importent information about the import of 2FAS tokens."
  },
  "@importHintAegisBackupFile": {
    "description": "Tells the user importent information about the import of Aegis backup files."
  },
  "@importHintAegisLink": {
    "description": "Tells the user importent information about the import of Aegis links."
  },
  "@importHintAegisQrScan": {
    "description": "Tells the user importent information about the import of Aegis qr codes."
  },
  "@importHintAuthenticatorProFile": {
    "description": "Tells the user importent information about the import of Authenticator Pro files."
  },
  "@importHintFreeOtpPlusFile": {
    "description": "Tells the user importent information about the import of FreeOTP+ files."
  },
  "@importHintFreeOtpPlusQrScan": {
    "description": "Tells the user importent information about the import of FreeOTP+ qr codes."
  },
  "@importHintGoogleQrFile": {
    "description": "Tells the user importent information about the import of Google qr codes."
  },
  "@importHintGoogleQrScan": {
    "description": "Tells the user importent information about the import of Google qr codes."
  },
  "@importHintPrivacyIdeaFile": {
    "description": "Tells the user importent information about the import of privacyIDEA files."
  },
  "@importHintPrivacyIdeaQrScan": {
    "description": "Tells the user importent information about the import of privacyIDEA qr codes."
  },
  "@importNTokens": {
    "description": "Buttontext to import n tokens.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@importNewToken": {
    "description": "Title for the section where the user can see the new tokens.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@importTokens": {
    "description": "Title of the import Tokens screen when it is not clear where the tokens come from."
  },
  "@importedVia": {
    "description": "Label for the import method of the token."
  },
  "@increaseCounter": {
    "description": "A11y label for the button that increases the counter."
  },
  "@indelibleTokenContent": {
    "description": "Content for the indelible token dialog"
  },
  "@indelibleTokenTitle": {
    "description": "Title for the indelible token dialog"
  },
  "@initialTokenAssignmentDialogButtonSelected": {
    "description": "Button text to send selected OTPs."
  },
  "@initialTokenAssignmentDialogButtonZero": {
    "description": "Button text to send no OTPs."
  },
  "@initialTokenAssignmentDialogContent1": {
    "description": "First part of the dialog content to ask the user if he wants to automatically assign a token to a container",
    "placeholders": {
      "url": {
        "description": "The server URL from the container",
        "example": "https://example.com/",
        "type": "String"
      }
    }
  },
  "@initialTokenAssignmentDialogContent2": {
    "description": "Second part of the dialog content to ask the user if he wants to automatically assign a token to a container"
  },
  "@initialTokenAssignmentDialogQuestion": {
    "description": "Question if the user wants to continue with the automatic assignment of a token to a container"
  },
  "@initialTokenAssignmentDialogSSLWarning1": {
    "description": "First part of the warning that tells the user that SSL verification is disabled."
  },
  "@initialTokenAssignmentDialogSSLWarning2": {
    "description": "Second part of the warning that tells the user that SSL verification is disabled."
  },
  "@initialTokenAssignmentDialogTitle": {
    "description": "Title of the dialog to ask the user if he wants to automatically assign a token to a container"
  },
  "@internalServerError": {
    "description": "Error message when an internal server error occurred.",
    "placeholders": {
      "code": {
        "example": "500",
        "type": "String"
      }
    }
  },
  "@introAddFolder": {
    "description": "Text for the introduction that explains how to add a folder."
  },
  "@introAddTokenManually": {
    "description": "Introduction text for the manual token enrollment."
  },
  "@introDragToken": {
    "description": "Text for the introduction that explains how to drag a token."
  },
  "@introEditToken": {
    "description": "Text for the introduction that explains how to edit a token."
  },
  "@introHidePushTokens": {
    "description": "Text for the introduction that explains where the user can find the hidden push tokens."
  },
  "@introLockToken": {
    "description": "Text for the introduction that explains how to lock a token."
  },
  "@introPollForChallenges": {
    "description": "Text for the introduction that explains how to poll for challenges."
  },
  "@introScanQrCode": {
    "description": "Text for the introduction that explains how to scan a qr code."
  },
  "@introTokenSwipe": {
    "description": "Text for the introduction that explains how to see the available actions for a token."
  },
  "@invalidBackupFile": {
    "description": "Error message when the backup file is invalid.",
    "placeholders": {
      "appName": {
        "example": "privacyIDEA Authenticator",
        "type": "String"
      }
    }
  },
  "@invalidHostForScheme": {
    "description": "Error message when the host is invalid for the scheme.",
    "placeholders": {
      "host": {
        "example": "example.com",
        "type": "String"
      },
      "scheme": {
        "example": "pia",
        "type": "String"
      }
    }
  },
  "@invalidLink": {
    "description": "Error message when the link is invalid.",
    "placeholders": {
      "appName": {
        "example": "privacyIDEA Authenticator",
        "type": "String"
      }
    }
  },
  "@invalidQrFile": {
    "description": "Error message when the qr file is invalid.",
    "placeholders": {
      "appName": {
        "example": "privacyIDEA Authenticator",
        "type": "String"
      }
    }
  },
  "@invalidQrScan": {
    "description": "Error message when the qr scan is invalid.",
    "placeholders": {
      "appName": {
        "example": "privacyIDEA Authenticator",
        "type": "String"
      }
    }
  },
  "@invalidUrl": {
    "description": "Error message when the entered URL is invalid."
  },
  "@invalidValue": {
    "description": "Error message when the value is not valid for the parameter.",
    "placeholders": {
      "parameter": {
        "example": "counter",
        "type": "String"
      },
      "type": {
        "example": "int",
        "type": "String"
      },
      "value": {
        "example": "5",
        "type": "String"
      }
    }
  },
  "@invalidValueIn": {
    "description": "Text for the error message when a value is not valid for a parameter in a specific map.",
    "placeholders": {
      "map": {
        "example": "query parameters",
        "type": "String"
      },
      "parameter": {
        "example": "counter",
        "type": "String"
      },
      "type": {
        "example": "int",
        "type": "String"
      },
      "value": {
        "example": "5",
        "type": "String"
      }
    }
  },
  "@isExpotableQuestion": {
    "description": "Label for the question if the token is exportable."
  },
  "@isPiTokenQuestion": {
    "description": "Title of the field where the user can see if the token is a privacyIDEA token."
  },
  "@issuer": {
    "description": "Title of the issuer field."
  },
  "@issuerLabel": {
    "description": "Label for the issuer of the token, container... etc.",
    "placeholders": {
      "name": {
        "example": "privacyIDEA",
        "type": "String"
      }
    }
  },
  "@language": {
    "description": "Title of language setting group."
  },
  "@legacySigningErrorMessage": {
    "description": "Message of the error dialog that is shown when an error occurs while using a legacy token."
  },
  "@legacySigningErrorTitle": {
    "description": "Title of the error dialog that is shown when an error occurs while using a legacy token.",
    "placeholders": {
      "tokenLabel": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@licensesAndVersion": {
    "description": "Buttontext to open the licenses and version screen."
  },
  "@linkHomeWidgetViewTitle": {
    "description": "Title of the link home widget view."
  },
  "@linkMustOtpAuth": {
    "description": "Error message when the link does not start with otpauth://."
  },
  "@linkedContainer": {
    "description": "Label for the linked container serial number."
  },
  "@lock": {
    "description": "Description of button that locks a token."
  },
  "@lockOut": {
    "description": "Message advising the user to re-enable biometrics on their device. It shows in a dialog on iOS side."
  },
  "@logMenu": {
    "description": "Button to open the log menu."
  },
  "@malformedData": {
    "description": "Error message when the data is malformed."
  },
  "@markQrCode": {
    "description": "Buttontext to mark the qr code."
  },
  "@missingRequiredParameter": {
    "description": "Error message when a required parameter is missing.",
    "placeholders": {
      "parameter": {
        "example": "counter",
        "type": "String"
      }
    }
  },
  "@missingRequiredParameterIn": {
    "description": "Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.Error message when a required parameter is missing in a specific map.",
    "placeholders": {
      "map": {
        "example": "query parameters",
        "type": "String"
      },
      "parameter": {
        "example": "counter",
        "type": "String"
      }
    }
  },
  "@missingWidgetId": {
    "description": "Error message when the widget id is missing."
  },
  "@mustNotBeEmpty": {
    "description": "Error message when a field must not be empty.",
    "placeholders": {
      "field": {
        "example": "Name",
        "type": "String"
      }
    }
  },
  "@name": {
    "description": "Describes the field where the tokens name should be entered."
  },
  "@no": {
    "description": "Content of the field when the answer is no."
  },
  "@noDataFoundInQrCode": {
    "description": "Error message when no data is found in the QR code."
  },
  "@noFbToken": {
    "description": "Tells the user that there is no Firebase token available."
  },
  "@noMailAppDescription": {
    "description": "Description of the dialog that tells the user that there is no mail app available."
  },
  "@noMailAppTitle": {
    "description": "Title of the dialog that tells the user that there is no mail app available."
  },
  "@noNetworkConnection": {
    "description": "Tells the user that there is no network connection."
  },
  "@noProcessorFoundForHost": {
    "description": "Error message when no processor is found for the host.",
    "placeholders": {
      "host": {
        "example": "example.com",
        "type": "String"
      }
    }
  },
  "@noPublicKey": {
    "description": "Error message when the public key is missing."
  },
  "@noResultText1": {
    "description": "first no result text"
  },
  "@noResultText2": {
    "description": "second no result text"
  },
  "@noResultTitle": {
    "description": "No tokens stored yet."
  },
  "@noTokenToExport": {
    "description": "Tells the user that there are no tokens to export."
  },
  "@noTokenToImport": {
    "description": "Tells the user that there are no tokens to import."
  },
  "@notAnInteger": {
    "description": "Error message when the user entered a value that is not an integer."
  },
  "@notAnNumber": {
    "description": "Error message when the user entered a value that is not a number."
  },
  "@notSupported": {
    "description": "Error message when something is not supported, depending on the context.",
    "placeholders": {
      "name": {
        "example": "piauth version",
        "type": "String"
      },
      "value": {
        "example": "5",
        "type": "String"
      }
    }
  },
  "@nothingToSelect": {
    "description": "Text to show when there is nothing to select."
  },
  "@ok": {
    "description": "Button to confirm an action."
  },
  "@open": {
    "description": "Button to open something."
  },
  "@originApp": {
    "description": "Label for the origin app."
  },
  "@originDetails": {
    "description": "Title of the origin details menu."
  },
  "@otpValueCopiedMessage": {
    "description": "Tells the user that the otp value was copied to the clipboard.",
    "placeholders": {
      "otpValue": {
        "example": "055374",
        "type": "String"
      }
    },
    "type": "text"
  },
  "@password": {
    "description": "Labeltext for the password input field."
  },
  "@passwordCannotBeEmpty": {
    "description": "Hint telling the user that the password cannot be empty."
  },
  "@passwordCannotContainWhitespace": {
    "description": "Hint telling the user that the password cannot contain whitespace."
  },
  "@passwordMustBeAtLeast8Characters": {
    "description": "Hint telling the user that the password must be at least 8 characters long."
  },
  "@passwordMustContainLowercaseLetter": {
    "description": "Hint telling the user that the password must contain a lowercase letter."
  },
  "@passwordMustContainNumber": {
    "description": "Hint telling the user that the password must contain a number."
  },
  "@passwordMustContainSpecialCharacter": {
    "description": "Hint telling the user that the password must contain a special character."
  },
  "@passwordMustContainUppercaseLetter": {
    "description": "Hint telling the user that the password must contain an uppercase letter."
  },
  "@passwordsDoNotMatch": {
    "description": "Hint telling the user that the confirm password does not match the password."
  },
  "@patchNotesBugFixes": {
    "description": "Title of the section in the patch notes that lists the bug fixes."
  },
  "@patchNotesDialogTitle": {
    "description": "Title of the dialog that shows the patch notes."
  },
  "@patchNotesImprovements": {
    "description": "Title of the section in the patch notes that lists the improvements."
  },
  "@patchNotesNewFeatures": {
    "description": "Title of the section in the patch notes that lists the new features."
  },
  "@patchNotesV4_3_0NewFeatures1": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_0NewFeatures2": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_0NewFeatures3": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_0NewFeatures4": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_0NewFeatures5": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_0NewFeatures6": {
    "description": "Patch notes for a new feature in version 4.3.0."
  },
  "@patchNotesV4_3_1BugFix1": {
    "description": "Patch notes for a bug fix in version 4.3.1."
  },
  "@patchNotesV4_3_1Improvement1": {
    "description": "Patch notes for an improvement in version 4.3.1."
  },
  "@patchNotesV4_4_0Improvement1": {
    "description": "Patch notes for an improvement in version 4.4.0."
  },
  "@patchNotesV4_4_0Improvement2": {
    "description": "Patch notes for an improvement in version 4.4.0."
  },
  "@patchNotesV4_4_0NewFeatures1": {
    "description": "Patch notes for a new feature in version 4.4.0."
  },
  "@patchNotesV4_4_0NewFeatures2": {
    "description": "Patch notes for a new feature in version 4.4.0."
  },
  "@patchNotesV4_4_2Improvement1": {
    "description": "Patch notes for an improvement in version 4.4.2"
  },
  "@patchNotesV4_4_2NewFeatures1": {
    "description": "Patch notes for a new feature in version 4.4.2"
  },
  "@patchNotesV4_4_2NewFeatures2": {
    "description": "Patch notes for a new feature in version 4.4.2"
  },
  "@patchNotesV4_5_0BugFix1": {
    "description": "Patch notes for a bug fix in version 4.5.0."
  },
  "@patchNotesV4_5_0NewFeatures1": {
    "description": "Patch notes for version 4.5.0"
  },
  "@period": {
    "description": "Title of the dropdown button where the period of the totp token is selected."
  },
  "@phonePart": {
    "description": "Title of a dialog telling the user that the phone was generated, and it is shown to the user."
  },
  "@piServerCode": {
    "description": "Message when privacyIDEA sends a server code.",
    "placeholders": {
      "code": {
        "example": "10",
        "type": "String"
      }
    }
  },
  "@pleaseEnterANameForThisToken": {
    "description": "Hint telling the user to enter a name for a token."
  },
  "@pleaseEnterASecretForThisToken": {
    "description": "Hint telling the user to enter a secret for a token."
  },
  "@pollingFailed": {
    "description": "Tells the user that the polling failed."
  },
  "@pollingFailedFor": {
    "description": "Tells the user that the polling failed.",
    "placeholders": {
      "serial": {
        "example": "PUSH1234A",
        "type": "String"
      }
    }
  },
  "@privacyPolicy": {
    "description": "Button to open the privacy policy."
  },
  "@publicKey": {
    "description": "Label for the text field where the public key is shown."
  },
  "@pushEndpointUrl": {
    "description": "Title of the push endpoint URL field."
  },
  "@pushInitializeUnavailable": {
    "description": "Error message when push can't be initialized."
  },
  "@pushRequestParseError": {
    "description": "Error message when the push request could not be parsed."
  },
  "@pushToken": {
    "description": "Title for the settings block concerning the push tokens."
  },
  "@pushTokensViewTitle": {
    "description": "Title of the push tokens view."
  },
  "@qrFileDecodeError": {
    "description": "Error message when the qr file could not be decoded."
  },
  "@qrInFileNotFound": {
    "description": "Error message when the qr code in the file could not be found."
  },
  "@qrInFileNotFound2": {
    "description": "Error message when the qr code in the file could not be found."
  },
  "@qrInFileNotFound3": {
    "description": "Error message when the qr code in the file could not be found."
  },
  "@qrNotFound": {
    "description": "Error message when the qr code could not be found."
  },
  "@rename": {
    "description": "Label that describes renaming the token."
  },
  "@renameToken": {
    "description": "Title of the dialog where a new name for a token can be entered."
  },
  "@renameTokenFolder": {
    "description": "Title of the dialog where a new name for a token folder can be entered."
  },
  "@renewSecretsButtonText": {
    "description": "Button text to renew the secrets of the tokens."
  },
  "@renewSecretsDialogText": {
    "description": "Content of the dialog that tells the user that the secrets of the tokens can be renewed."
  },
  "@renewSecretsDialogTitle": {
    "description": "Title of the dialog that tells the user that the secrets of the tokens can be renewed."
  },
  "@replaceButton": {
    "description": "Button to replace something, depending on the context."
  },
  "@requestInfo": {
    "description": "Description of the authentication request.",
    "placeholders": {
      "account": {
        "example": "GitHub",
        "type": "String"
      },
      "issuer": {
        "example": "privacyIDEA",
        "type": "String"
      }
    }
  },
  "@requestPushChallengesPeriodically": {
    "description": "The description of the polling feature."
  },
  "@requestTriggerdByUserQuestion": {
    "description": "Content of the dialog that asks the user if the request was triggered by the user."
  },
  "@retryRolloutButton": {
    "description": "Buttontext to retry the rollout."
  },
  "@rolloutStateCompleted": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateGeneratingKeyPair": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateGeneratingKeyPairCompleted": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateGeneratingKeyPairFailed": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateNotStarted": {
    "description": "Label that tells the user that the token is being rolled out."
  },
  "@rolloutStateParsingResponse": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateParsingResponseCompleted": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateParsingResponseFailed": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateReceivingFirebaseToken": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateReceivingFirebaseTokenFailed": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateSendingPublicKey": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateSendingPublicKeyCompleted": {
    "description": "Message for the rollout process"
  },
  "@rolloutStateSendingPublicKeyFailed": {
    "description": "Message for the rollout process"
  },
  "@saveButton": {
    "description": "Buttontext to save something, depending on the context."
  },
  "@scanQrCode": {
    "description": "The button to scan otpauth qr-codes."
  },
  "@scanThisQrWithNewDevice": {
    "description": "Content of the token export dialog that shows the user the qr code."
  },
  "@secondsUntilNextOTP": {
    "description": "Semantics label for the animated countdown until the next OTP is generated."
  },
  "@secretIsRequired": {
    "description": "Error message when the secret is missing."
  },
  "@secretKey": {
    "description": "Describes the field where the tokens secret should be entered."
  },
  "@selectAll": {
    "description": "Button to select all items in a list"
  },
  "@selectFile": {
    "description": "Buttontext and Title for the import type file."
  },
  "@selectImportSource": {
    "description": "Title of the screen where the user can select the token import source."
  },
  "@selectImportType": {
    "description": "Title of the screen where the user can select the token import type."
  },
  "@selectTokensToExport": {
    "description": "Title of the screen where the user can select the tokens to export.",
    "placeholders": {
      "count": {
        "example": "5",
        "type": "int"
      }
    }
  },
  "@selectTokensToExportHelpContent1": {
    "description": "Tells the user why some tokens are not exportable."
  },
  "@selectTokensToExportHelpContent2": {
    "description": "Tells the user why some tokens are not exportable."
  },
  "@selectTokensToExportHelpContent3": {
    "description": "Tells the user why some tokens are not exportable."
  },
  "@selectTokensToExportHelpContent4": {
    "description": "Tells the user why some tokens are not exportable."
  },
  "@selectTokensToExportHelpTitle": {
    "description": "Title of the help dialog that explains why some tokens are not exportable."
  },
  "@send": {
    "description": "Button to send the error log."
  },
  "@sendErrorDialogBody": {
    "description": "Description shown to the user about what info the error report contains."
  },
  "@sendErrorLogDescription": {
    "description": "Explanation for the user what he will send."
  },
  "@sendPushRequestResponseFailed": {
    "description": "Error message when the response to a push request could not be sent."
  },
  "@serverNotReachable": {
    "description": "Tells the user that the server could not be reached."
  },
  "@settings": {
    "description": "Button to open the settings page."
  },
  "@settingsGroupGeneral": {
    "description": "Title for the general settings group."
  },
  "@showContainerUrlDialogContent": {
    "description": "Dialog content to show the container URL.",
    "placeholders": {
      "url": {
        "description": "The URL of the container.",
        "example": "https://example.com/",
        "type": "String"
      }
    }
  },
  "@showContainerUrlDialogSslWarning": {
    "description": "Warning message that the SSL is deactivated."
  },
  "@showContainerUrlDialogTitle": {
    "description": "Title of the dialog that shows the server URL."
  },
  "@showDetails": {
    "description": "Button to show details."
  },
  "@showErrorLog": {
    "description": "Button to show the error log."
  },
  "@showPrivacyPolicy": {
    "description": "Button to show the privacy policy."
  },
  "@signInTitle": {
    "description": "Message showed as a title in a dialog which indicates the user that they need to scan biometric to continue. It is used on Android side. Maximum 60 characters."
  },
  "@someTokensDoNotSupportPolling": {
    "description": "Tells the user, that the following tokens do not support polling.",
    "type": "text"
  },
  "@startTransferButtonText": {
    "description": "Button text to start the container transfer."
  },
  "@statusCode": {
    "description": "Tells the user the status code of the error.",
    "placeholders": {
      "statusCode": {
        "example": "400",
        "type": "int"
      }
    }
  },
  "@sync": {
    "description": "Text of button that is used to synchronize push tokens."
  },
  "@syncContainerFailed": {
    "description": "Error message when synchronizing a container failed."
  },
  "@syncContainerNotFoundDialogContent": {
    "description": "Content for the dialog that appears when a container could not be found on the server."
  },
  "@syncContainerNotFoundDialogTitle": {
    "description": "Title for the dialog that appears when a container could not be found on the server.",
    "placeholders": {
      "serial": {
        "example": "123456",
        "type": "String"
      }
    }
  },
  "@syncFbTokenFailed": {
    "description": "Headline for the list of tokens where the synchronization failed."
  },
  "@syncFbTokenManuallyWhenNetworkIsAvailable": {
    "description": "Status message that tells the user to sync the Firebase token manually when the network is available."
  },
  "@syncState": {
    "description": "The state of the synchronization of the token"
  },
  "@syncStateCompletedDescription": {
    "description": "The description of the state when the synchronization is completed"
  },
  "@syncStateFailedDescription": {
    "description": "The description of the state when the synchronization failed"
  },
  "@syncStateNotStartedDescription": {
    "description": "The description of the state when the synchronization is not started"
  },
  "@syncStateSyncingDescription": {
    "description": "The description of the state when the synchronization is currently syncing"
  },
  "@synchronizePushTokens": {
    "description": "Title of synchronizing push tokens in settings."
  },
  "@synchronizesTokensWithServer": {
    "description": "Description of synchronizing push tokens in settings."
  },
  "@synchronizingTokens": {
    "description": "Title of the push synchronization dialog."
  },
  "@theSecretDoesNotFitTheCurrentEncoding": {
    "description": "Hint telling the user that the secret does not fit the selected encoding."
  },
  "@theme": {
    "description": "Title of the setting group where the theme can be selected."
  },
  "@timeOut": {
    "description": "Error message when a request times out."
  },
  "@tokenDataParseError": {
    "description": "Error message when the token data could not be parsed."
  },
  "@tokenDetails": {
    "description": "Title of the token details menu."
  },
  "@tokenLinkImport": {
    "description": "Label for the input field where the token link should be entered."
  },
  "@tokenSerial": {
    "description": "Label for the token serial number."
  },
  "@tokensAreEncrypted": {
    "description": "Content of the import view that tells the user that the tokens are encrypted."
  },
  "@tokensDoNotSupportSynchronization": {
    "description": "Informs the user that the following tokens cannot be synchronized as they do not support that."
  },
  "@tokensSuccessfullyDecrypted": {
    "description": "Content of the import view that tells the user that the tokens were successfully decrypted."
  },
  "@transferButton": {
    "description": "Label of the button to start the transfer of the container."
  },
  "@transferContainerDialogContent1": {
    "description": "Content of the dialog that tells the user that the container can be transferred."
  },
  "@transferContainerDialogContent2": {
    "description": "Content of the dialog that tells the user that an active internet connection is required for the container transfer."
  },
  "@transferContainerDialogTitle": {
    "description": "Title of the dialog that tells the user that the container can be transferred."
  },
  "@transferContainerFailed": {
    "description": "Error message when the container transfer failed."
  },
  "@transferContainerScanQrCode": {
    "description": "Content of the dialog that tells the user to scan the QR code on the new device to transfer the container."
  },
  "@transferContainerSuccessDialogContent1": {
    "description": "Content of the dialog that tells the user that the container has been transferred successfully."
  },
  "@transferContainerSuccessDialogContent2": {
    "description": "Content of the dialog that asks the user if they want to delete the container and its corresponding tokens from this device."
  },
  "@transferOfflineTokenDialogContent": {
    "description": "Content of the dialog that informs the user that the container has offline tokens.",
    "placeholders": {
      "count": {
        "description": "The number of offline tokens.",
        "example": "2",
        "type": "int"
      }
    }
  },
  "@transferOfflineTokenDialogTitle": {
    "description": "Title of the dialog that informs the user that the container has offline tokens."
  },
  "@twoStepSecretFailed": {
    "description": "Error message when the two step secret could not be generated, or was canceled."
  },
  "@type": {
    "description": "Title of the dropdown button where the type of the token is selected."
  },
  "@unableToCreateToken": {
    "description": "Error message when a token could not be created."
  },
  "@unexpectedError": {
    "description": "Title of page report mode."
  },
  "@unknown": {
    "description": "Tells that something is unknown."
  },
  "@unlock": {
    "description": "Description of button that unlocks a token."
  },
  "@unsupported": {
    "description": "Error message when something is not supported, depending on the context.",
    "placeholders": {
      "name": {
        "example": "piauth version",
        "type": "String"
      },
      "value": {
        "example": "5",
        "type": "String"
      }
    }
  },
  "@useDeviceLocaleDescription": {
    "description": "Description of the switch tile where using the devices language can be enabled."
  },
  "@useDeviceLocaleTitle": {
    "description": "Title of the switch tile where using the devices language can be enabled."
  },
  "@valueNotAllowed": {
    "description": "Error message when a value is not allowed for a specific parameter.",
    "placeholders": {
      "parameter": {
        "example": "counter",
        "type": "String"
      },
      "type": {
        "example": "int",
        "type": "String"
      },
      "value": {
        "example": "-1",
        "type": "String"
      }
    }
  },
  "@valueNotAllowedIn": {
    "description": "Error message when a value is not allowed for a specific parameter in a specific map.",
    "placeholders": {
      "map": {
        "example": "query parameters",
        "type": "String"
      },
      "parameter": {
        "example": "counter",
        "type": "String"
      },
      "type": {
        "example": "int",
        "type": "String"
      },
      "value": {
        "example": "-1",
        "type": "String"
      }
    }
  },
  "@verboseLogging": {
    "description": "Title of the switch tile where verbose logging can be enabled."
  },
  "@versionTitle": {
    "description": "Title of a section of the patch notes."
  },
  "@wrongPassword": {
    "description": "Tells the user that the entered password is wrong."
  },
  "@yes": {
    "description": "Positive answer text to a binary question. Used for buttons and text fields."
  },
  "a11yAddFolderButton": "Add folder",
  "a11yAddTokenManuallyButton": "Add token manually",
  "a11yCloseSearchTokensButton": "Close search",
  "a11yLicensesButton": "Licenses",
  "a11yPushTokensButton": "Push Tokens",
  "a11yScanQrCodeButton": "Scan QR-Code",
  "a11yScanQrCodeViewActive": "Scan-QR-code view. Camera is active",
  "a11yScanQrCodeViewFlashlightOff": "Tap to turn on flashlight.",
  "a11yScanQrCodeViewFlashlightOn": "Tap to turn off flashlight.",
  "a11yScanQrCodeViewGallery": "Open gallery",
  "a11yScanQrCodeViewInactive": "Scan-QR-code view. Camera is not active",
  "a11ySearchTokensButton": "Search tokens",
  "a11ySecondsUntilNextOTP": "{seconds} Seconds until the next OTP will be generated.",
  "a11ySettingsButton": "Settings",
  "accept": "Accept",
  "addANewFolder": "Create new folder",
  "addSystemInfo": "Add system information",
  "addToken": "Add token",
  "additionalErrorMessage": "Optional message",
  "algorithm": "Algorithm",
  "algorithmUnsupported": "The algorithm {algorithm} is not supported",
  "allTokensSynchronized": "All tokens are synchronized.",
  "asFile": "As file",
  "asQrCode": "As QR code",
  "askLogSentDescription": "Did you sent the log, and do you want to clear it now?",
  "authNotSupportedBody": "This action requires the device to be secured by credentials or biometrics.",
  "authNotSupportedTitle": "Device credentials or biometrics required",
  "authToAcceptPushRequest": "Please authenticate to accept the push request.",
  "authToDeclinePushRequest": "Please authenticate to decline the push request.",
  "authToDiscardPushRequest": "Please authenticate to reject the request.",
  "authenticateToShowOtp": "Please authenticate to show one time password.",
  "authenticateToUnLockToken": "Please authenticate to change the lock status of the token.",
  "authentication": "Authentication",
  "biometricHint": "Authentication required",
  "biometricNotRecognized": "Not recognized. Try again.",
  "biometricRequiredTitle": "Biometrics not setup",
  "biometricSuccess": "Authentication successful",
  "butDiscardIt": "but discard it",
  "cancel": "Cancel",
  "cannotNavigateWithoutContext": "Cannot navigate without context.",
  "checkServerCertificate": "Please check the server certificate",
  "checkYourNetwork": "Please check your network connection and try again.",
  "clearErrorLog": "Clear",
  "clipboardEmpty": "Clipboard is empty",
  "confirmDeletion": "Confirm deletion",
  "confirmDeletionOf": "Are you sure you want to delete {name}?",
  "confirmFolderDeletionHint": "Deleting a folder does not affect the tokens inside it.\nThe tokens will be moved to the main list.",
  "confirmPassword": "Confirm password",
  "confirmTokenDeletionHint": "You may no longer be able to log in if you delete this token.\nPlease make sure that you can log in to the associated account without this token.",
  "confirmation": "Confirmation",
  "connectionFailed": "Connection failed.",
  "container": "Container",
  "containerAlreadyExists": "Container already exists",
  "containerDeleteCorrespondingTokenDialogContent": "Do you want to delete the corresponding tokens as well?",
  "containerDetails": "Container details",
  "containerRolloutExpired": "Container {serial} has expired and can not be rolled out anymore",
  "containerRolloutSendDeviceInfoDialogContent": "Would you like to tell the publisher of the container which device you are using? This may be useful later if you have problems with your second factor.",
  "containerRolloutSendDeviceInfoDialogTitle": "Send device information",
  "containerSerial": "Container Serial",
  "containerSyncDialogNewTokens": "Tokens added by container synchronization:",
  "containerSyncDialogRemovedTokens": "Tokens removed by container synchronization:",
  "containerSyncDialogTitle": "Synchronise container {serial}",
  "containerSyncUrl": "Container Sync URL",
  "containerTransferDeleteTokensButtonText": "Remove from this device",
  "containerTransferDeleteTokensSuccessMessage": "Container and corresponding tokens successfully removed from this device.",
  "containerTransferDialogContentAborted": "Container transfer aborted.",
  "continueButton": "Continue",
  "copyOTPToClipboard": "Copy OTP to clipboard",
  "couldNotConnectToServer": "Could not connect to server",
  "couldNotFindGlobalRef": "Could not find globalRef",
  "couldNotFindTokenForWidgetId": "Could not find token for widget id: {id}",
  "couldNotSignMessage": "Could not sign message.",
  "counter": "Counter",
  "create": "Create",
  "createdAt": "Created on",
  "creator": "Creator",
  "dayPasswordValidFor": "Valid for",
  "dayPasswordValidUntil": "Valid until",
  "decline": "Decline",
  "declineIt": "Decline it",
  "decrypt": "Decrypt",
  "decryptErrorButtonDelete": "Delete",
  "decryptErrorButtonRetry": "Retry",
  "decryptErrorButtonSendError": "Send error",
  "decryptErrorContent": "Unfortunately, the app was unable to decrypt your tokens. This may indicate that the encryption key is either corrupted or missing. You can try again or delete the app data, which would delete the tokens in the app.",
  "decryptErrorDeleteConfirmationContent": "Are you sure you want to delete the app data?",
  "decryptErrorTitle": "Decryption error",
  "delete": "Delete",
  "deleteAllButtonText": "Delete all",
  "deleteContainerDialogContent": "If you delete this container, the smartphone is disconnected from the privacyIDEA server and the tokens of this container become unusable. Before deleting, make sure that the corresponding tokens are no longer required!",
  "deleteContainerDialogTitle": "Deleting Container {serial}",
  "deleteLockedToken": "Please authenticate to delete the locked token.",
  "deleteOnlyContainerButtonText": "Only container",
  "details": "Details",
  "deviceCredentialsRequiredTitle": "Device credentials not set up",
  "deviceCredentialsSetupDescription": "Set up device credentials in your device's settings",
  "digits": "Digits",
  "dismiss": "Dismiss",
  "done": "Done",
  "edit": "Edit",
  "editLockedToken": "Please authenticate to edit the locked token.",
  "editToken": "Edit Token",
  "enablePolling": "Enable polling",
  "encoding": "Encoding",
  "enterDetailsForToken": "Enter token details",
  "enterLink": "Enter link",
  "enterPassphraseDialogHint": "Passphrase",
  "enterPassphraseDialogTitle": "Enter passphrase",
  "enterPasswordToEncrypt": "Enter a password to encrypt the tokens. This password will be required to import the tokens.",
  "errorLogCleared": "Error log has been cleared.",
  "errorLogEmpty": "The error log is empty.",
  "errorLogTitle": "Error log",
  "errorMailBody": "The error log file is attached.\nYou can replace this text with additional information about the error.",
  "errorMissingPrivateKey": "Private key missing",
  "errorRollOutFailed": "Rolling out token {name} failed.",
  "errorRollOutNoConnectionToServer": "Rolling out token {name} failed, the server could not be reached.",
  "errorRollOutNotPossibleAnymore": "Rolling out this Token is not possible anymore.",
  "errorRollOutSSLHandshakeFailed": "SSL handshake failed. Roll-out not possible.",
  "errorRollOutUnknownError": "An unknown error occurred. Roll-out not possible: {e}",
  "errorRolloverNotAllowed": "Rollover for this container is not allowed.",
  "errorSavingFile": "Saving the file failed",
  "errorSynchronizationNoNetworkConnection": "Synchronizing tokens failed, privacyIDEA server could not be reached.",
  "errorTokenExpired": "The token {name} has expired.",
  "errorUnlinkingPushToken": "Failed to unlink the push token {label}.",
  "errorUnregisterNotAllowed": "Unregistering for this container is not allowed.",
  "errorWhenPullingChallenges": "An error occurred when polling for challenges of {name}",
  "exampleUrl": "Please enter a valid URL like: “https://example.com/“",
  "expandLockedFolder": "Please authenticate to expand the locked folder.",
  "export": "Export",
  "exportAllTokens": "Export all tokens",
  "exportLockedTokenReason": "Please authenticate to export locked tokens.",
  "exportNonPrivacyIDEATokens": "Export non-privacyIDEA tokens",
  "exportOneMore": "One more",
  "exportTokens": "Export tokens",
  "exportTokensHintDialogTitle": "Important information",
  "exportingTokens": "Exporting tokens...",
  "failedToFinalizeContainer": "Failed to finalize the container {serial}",
  "failedToLoad": "Failed to load: “{name}“",
  "failedToRenewSecrets": "Failed to renew secrets",
  "failedToSyncContainer": "Failed to sync container {serial}",
  "feedback": "Feedback",
  "feedbackDescription": "If you have any questions, suggestions or problems, please let us know.",
  "feedbackHint": "A ready-made e-mail will open, which you can send to us. If desired, information about your device and the version of the application will be added. You can check and edit the email before sending it.",
  "feedbackPrivacyPolicy1": "By sending feedback, you agree to our ",
  "feedbackPrivacyPolicy2": "privacy policy",
  "feedbackPrivacyPolicy3": ".",
  "feedbackSentDescription": "Thank you very much for your help in making this application better!",
  "feedbackSentTitle": "Feedback sent",
  "feedbackTitle": "Your feedback is always welcome!",
  "fileNotAvailable": "The file is currently not available! Please try again.",
  "fileSavedToDownloadsFolder": "File saved to Downloads folder",
  "finalizationState": "Finalization State",
  "finalizeContainerFailed": "Finalize Container Failed",
  "firebaseToken": "Firebase Token",
  "folderName": "Folder name",
  "forceDeleteDialogContent": "The server was unreachable. Are you sure you want to delete the container?",
  "generatingPhonePart": "Generating phone part",
  "gitHubButton": "This Application is Open Source\nVisit us on GitHub",
  "goToSettingsButton": "Go to settings",
  "goToSettingsDescription": "Authentication by credentials or biometrics is not set up on your device. Please set it up in the device's settings.",
  "grantCameraPermissionDialogButton": "Grant permission",
  "grantCameraPermissionDialogContent": "Please grant camera permission to scan QR codes.",
  "grantCameraPermissionDialogPermanentlyDenied": "Camera permission is permanently denied. Please grant camera permission in your phone's settings.",
  "grantCameraPermissionDialogTitle": "Camera permission is not granted",
  "handshakeFailed": "Handshake failed",
  "handshakeFailedLongText": "Handshake failed. Please check the server certificate and try again.",
  "hidePushTokens": "Hide push tokens",
  "hidePushTokensDescription": "Hide push tokens from the token list. This will not delete the tokens and they will still be visible on a separate screen.",
  "httpStatus": "{httpCode, select, 100{{httpCode}: Continue} 101{{httpCode}: Switching Protocols} 102{{httpCode}: Processing} 103{{httpCode}: Early Hints} 104{{httpCode}: Connection Reset By Peer} 111{{httpCode}: Connection refused} 200{{httpCode}: OK} 201{{httpCode}: Created} 202{{httpCode}: Accepted} 203{{httpCode}: Non-Authoritative Information} 204{{httpCode}: No Content} 205{{httpCode}: Reset Content} 206{{httpCode}: Partial Content} 207{{httpCode}: Multi-Status} 208{{httpCode}: Already Reported} 300{{httpCode}: Multiple Choices} 301{{httpCode}: Moved Permanently} 302{{httpCode}: Found} 303{{httpCode}: See Other} 304{{httpCode}: Not Modified} 305{{httpCode}: Use Proxy} 307{{httpCode}: Temporary Redirect} 308{{httpCode}: Permanent Redirect} 400{{httpCode}: Bad Request} 401{{httpCode}: Unauthorized} 402{{httpCode}: Payment Required} 403{{httpCode}: Forbidden} 404{{httpCode}: Not Found} 405{{httpCode}: Method Not Allowed} 406{{httpCode}: Not Acceptable} 407{{httpCode}: Proxy Authentication Required} 408{{httpCode}: Request Timeout} 409{{httpCode}: Conflict} 410{{httpCode}: Gone} 411{{httpCode}: Length Required} 412{{httpCode}: Precondition Failed} 413{{httpCode}: Payload Too Large} 414{{httpCode}: Request-URI Too Long} 415{{httpCode}: Unsupported Media Type} 416{{httpCode}: Requested Range Not Satisfiable} 417{{httpCode}: Expectation Failed} 418{{httpCode}: I'm a teapot} 420{{httpCode}: Enhance Your Calm} 421{{httpCode}: Misdirected Request} 422{{httpCode}: Unprocessable Entity} 423{{httpCode}: Locked} 424{{httpCode}: Failed Dependency} 426{{httpCode}: Upgrade Required} 428{{httpCode}: Precondition Required} 429{{httpCode}: Too Many Requests} 431{{httpCode}: Request Header Fields Too Large} 444{{httpCode}: Connection Closed Without Response} 451{{httpCode}: Unavailable For Legal Reasons} 499{{httpCode}: Client Closed Request} 500{{httpCode}: Internal Server Error} 501{{httpCode}: Not Implemented} 502{{httpCode}: Bad Gateway} 503{{httpCode}: Service Unavailable} 504{{httpCode}: Gateway Timeout} 505{{httpCode}: HTTP Version Not Supported} 506{{httpCode}: Variant Also Negotiates} 507{{httpCode}: Insufficient Storage} 508{{httpCode}: Loop Detected} 510{{httpCode}: Not Extended} 511{{httpCode}: Network Authentication Required} 520{{httpCode}: Unknown Error} 521{{httpCode}: Web Server Is Down} 522{{httpCode}: Connection Timed Out} 523{{httpCode}: Origin Is Unreachable} 524{{httpCode}: A Timeout Occurred} 525{{httpCode}: Handshake Failed} 526{{httpCode}: Invalid SSL Certificate} 527{{httpCode}: Railgun Error} 528{{httpCode}: Transport Error} 529{{httpCode}: Service is Overloaded} 530{{httpCode}: Site is Frozen} 599{{httpCode}: Network Connect Timeout Error} other{{httpCode}: Unknown Error}}",
  "imageUrl": "Image URL",
  "importConflictToken": "{count, plural, zero{There is no conflict with existing tokens.} one{There is a conflict with existing tokens.\nPlease select which one you would like to keep.} other{There are {count} conflicts with existing tokens.\nPlease select the tokens you wish to keep.}}",
  "importExistingToken": "{count, plural, zero{No token was found that is already in the application.} one{A token was found that already exists in the application.} other{{count} tokens were found that are already in the application.}}",
  "importExportTokens": "Import/Export tokens",
  "importFailedToken": "{count, plural, zero{No token failed to import.} one{Failed to import a token.} other{Failed to import {count} tokens.}}",
  "importHint2FAS": "Select your 2FAS backup.\nIf you do not have a backup, create one in the 2FAS app. We recommend using a password.",
  "importHintAegisBackupFile": "Select your Aegis export (.JSON).\nIf you do not have an export, please create one via the settings menu in the Aegis app. The use of a password is recommended.",
  "importHintAegisLink": "Enter the link you receive when you transfer entries from Aegis.",
  "importHintAegisQrScan": "Scan the QR code you receive when you transfer entries from Aegis.",
  "importHintAuthenticatorProFile": "To create a backup of the Authenticator Pro app, navigate to the settings and tap on “Auto backup“. Select a storage location and set a password. Then press “Back up now“ to export the tokens.",
  "importHintFreeOtpPlusFile": "To create a backup of the FreeOTP+ app, tap on the three dots in the upper right corner and select “Export“. You can choose between JSON and URI format. We recommend to delete the backup after importing it, because it is not encrypted.",
  "importHintFreeOtpPlusQrScan": "Scan the QR code you receive when you press the three dots in the tile of the token and select “Share QR code“.",
  "importHintGoogleQrFile": "Select an image file with the QR code you receive when you export your accounts from Google Authenticator.\n⚠ It is not safe to save the QR code on your device, as the tokens are not encrypted! ⚠",
  "importHintGoogleQrScan": "Scan the QR code you receive when you export your accounts from Google Authenticator.",
  "importHintPrivacyIdeaFile": "To create a backup, go to the settings and tap on “Export“. Select “As file“, select the tokens you want to export. Then tap on “Export“ and set a password. The storage location is the download folder on your device.",
  "importHintPrivacyIdeaQrScan": "Um QR-Codes der Token zu erstellen, navigieren Sie zu den Einstellungen und tippen auf “Exportieren“. Wählen Sie dann “Als QR-Code“ und tippen Sie auf den zu exportierenden Token. Diese Variante ist nur für die direkte Übertragung auf ein anderes Gerät geeignet, da der QR-Code nicht verschlüsselt ist.",
  "importNTokens": "{count, plural, zero{Import no token} one{Import one token} other{Import {count} tokens}}",
  "importNewToken": "{count, plural, zero{No new token was found.} one{A new token was found that can be imported.} other{{count} new tokens were found that can be imported.}}",
  "importTokens": "Import token",
  "importedVia": "Imported via",
  "increaseCounter": "Increase counter",
  "indelibleTokenContent": "The container settings prevent this token from being deleted.",
  "indelibleTokenTitle": "Indelible Token",
  "initialTokenAssignmentDialogButtonSelected": "Send selected OTPs",
  "initialTokenAssignmentDialogButtonZero": "Send no OTPs",
  "initialTokenAssignmentDialogContent1": "Two one-time passwords of the selected tokens will be sent to:\n{url}",
  "initialTokenAssignmentDialogContent2": "This will be used to automatically assign your privacyIDEA token to this Container.",
  "initialTokenAssignmentDialogQuestion": "Do you want to continue?",
  "initialTokenAssignmentDialogSSLWarning1": "SSL Verification is disabled!",
  "initialTokenAssignmentDialogSSLWarning2": "To send OTPs to an unverified server is a high security risk!",
  "initialTokenAssignmentDialogTitle": "Automatic Assignment",
  "internalServerError": "Internal server error ({code})",
  "introAddFolder": "You can create folders to organize your tokens.",
  "introAddTokenManually": "If you don't want to scan a QR code, you can also add tokens manually.",
  "introDragToken": "Reorganize your tokens by pressing it for a few seconds and then dragging it to the desired position.",
  "introEditToken": "Here you can edit the token name and see some details.",
  "introHidePushTokens": "Your push tokens are hidden now.\nBut you can still see them on the push token screen.",
  "introLockToken": "To improve security even more, you can lock tokens.\nThen the token can only be used after authentication.",
  "introPollForChallenges": "You can check for new challenges by dragging down the token list.",
  "introScanQrCode": "You can scan QR codes to add tokens.\nWe support every common Two-Factor-Authentication token and also the privacyIDEA tokens.",
  "introTokenSwipe": "Swipe tokens to the left to see available actions.",
  "invalidBackupFile": "The selected file is not a valid backup of {appName}.",
  "invalidHostForScheme": "Invalid host: {host} for scheme: {scheme}",
  "invalidLink": "The link entered is not a valid token of {appName}, or it is not supported.",
  "invalidQrFile": "The selected file does not contain a valid QR code from {appName}.",
  "invalidQrScan": "The scanned QR code is not a valid backup of {appName}.",
  "invalidUrl": "Invalid URL",
  "invalidValue": "The {type} “{value}“ is not valid for “{parameter}“",
  "invalidValueIn": "The {type} “{value}“ is not valid for “{parameter}“ in “{map}“",
  "isExpotableQuestion": "Is exportable?",
  "isPiTokenQuestion": "It's a privacyIDEA token?",
  "issuer": "Issuer",
  "issuerLabel": "Issuer: {name}",
  "language": "Language",
  "legacySigningErrorMessage": "The token was enrolled in a old version of this app, which may cause trouble using it.\nIt is suggested to enroll a new push token if the problem persist!",
  "legacySigningErrorTitle": "An error occurred while using the legacy token: {tokenLabel}",
  "licensesAndVersion": "Licenses and version",
  "linkHomeWidgetViewTitle": "Link home widget",
  "linkMustOtpAuth": "The link must start with otpauth://",
  "linkedContainer": "Linked container",
  "lock": "Lock",
  "lockOut": "Biometric authentication is disabled. Please lock and unlock your screen to enable it.",
  "logMenu": "Log menu",
  "malformedData": "Malformed data",
  "markQrCode": "Mark QR Code",
  "missingRequiredParameter": "The value for the [{parameter}] parameter is required, but is missing.",
  "missingRequiredParameterIn": "The value for the parameter [{parameter}] is required, but is missing in “{map}“.",
  "missingWidgetId": "Missing widgetId",
  "mustNotBeEmpty": "{field} must not be empty",
  "name": "Name",
  "no": "No",
  "noDataFoundInQrCode": "No data found in the QR code.",
  "noFbToken": "No Firebase token available",
  "noMailAppDescription": "There is no e-mail app installed or initialised on this device, please try again when you are able to send an email message.",
  "noMailAppTitle": "No mail app found",
  "noNetworkConnection": "No network connection.",
  "noProcessorFoundForHost": "No processor found for host: {host}",
  "noPublicKey": "No public key available",
  "noResultText1": "Tap the ",
  "noResultText2": "button to get started!",
  "noResultTitle": "No tokens stored yet.",
  "noTokenToExport": "No token available for export",
  "noTokenToImport": "No token found to import",
  "notAnInteger": "The value is not an integer.",
  "notAnNumber": "The value is not a number.",
  "notSupported": "The {name} [{value}] not supported",
  "nothingToSelect": "There is nothing to select.",
  "ok": "Ok",
  "open": "Open",
  "originApp": "Origin app",
  "originDetails": "Origin details",
  "otpValueCopiedMessage": "Password “{otpValue}“ copied to clipboard.",
  "password": "Password",
  "passwordCannotBeEmpty": "Password cannot be empty",
  "passwordCannotContainWhitespace": "Password cannot contain whitespace",
  "passwordMustBeAtLeast8Characters": "Password must be at least 8 characters",
  "passwordMustContainLowercaseLetter": "Password must contain lowercase letter",
  "passwordMustContainNumber": "Password must contain number",
  "passwordMustContainSpecialCharacter": "Password must contain special character",
  "passwordMustContainUppercaseLetter": "Password must contain uppercase letter",
  "passwordsDoNotMatch": "Passwords do not match",
  "patchNotesBugFixes": "Bug fixes",
  "patchNotesDialogTitle": "What's new?",
  "patchNotesImprovements": "Improvements",
  "patchNotesNewFeatures": "New features",
  "patchNotesV4_3_0NewFeatures1": "Support for importing tokens from Google, Aegis, and 2FAS Authenticator has been added. More import sources will be added in the future.",
  "patchNotesV4_3_0NewFeatures2": "Added feedback option to the settings.",
  "patchNotesV4_3_0NewFeatures3": "Push tokens can now be hidden from the token list.",
  "patchNotesV4_3_0NewFeatures4": "Introductions have been added to help new users get started.",
  "patchNotesV4_3_0NewFeatures5": "You can now search for tokens by tapping the magnifying glass in the upper right corner.",
  "patchNotesV4_3_0NewFeatures6": "Added HomeWidget token for Android 12 and later.",
  "patchNotesV4_3_1BugFix1": "Fixed an issue where the OTP value was not displayed after authentication on some devices.",
  "patchNotesV4_3_1Improvement1": "Improved the qr code scanner.",
  "patchNotesV4_4_0Improvement1": "Further import sources have been added.",
  "patchNotesV4_4_0Improvement2": "Improved recognition of QR codes from image files.",
  "patchNotesV4_4_0NewFeatures1": "It is now possible to export tokens where it can be ensured that they are not privacyIDEA tokens. Currently, it is not possible to determine whether tokens added via the QR code scanner originate from privacyIDEA. The differentiation will be improved in future versions.",
  "patchNotesV4_4_0NewFeatures2": "Added support for privacyIDEA's “require presence“",
  "patchNotesV4_4_2Improvement1": "Added flashlight support for QR code scanning.",
  "patchNotesV4_4_2NewFeatures1": "Tokens can now be inserted using copy & paste.",
  "patchNotesV4_4_2NewFeatures2": "Added image gallery support for QR code scanning.",
  "patchNotesV4_5_0BugFix1": "Fixed minor issues",
  "patchNotesV4_5_0NewFeatures1": "Now supports the container feature of privacyIDEA.",
  "period": "Period",
  "phonePart": "Phone part:",
  "piServerCode": "PI Server Code: {code}",
  "pleaseEnterANameForThisToken": "Please enter a name for this token.",
  "pleaseEnterASecretForThisToken": "Please enter a secret for this token.",
  "pollingFailed": "Polling failed.",
  "pollingFailedFor": "Polling failed for {serial}",
  "privacyPolicy": "Privacy policy",
  "publicKey": "Public Key",
  "pushEndpointUrl": "Push endpoint URL",
  "pushInitializeUnavailable": "Push can't be initialized, restart the app and try again.",
  "pushRequestParseError": "Push request could not be parsed.",
  "pushToken": "Push Token",
  "pushTokensViewTitle": "Push-Tokens",
  "qrFileDecodeError": "It was not possible to decode the QR code from the selected image, please use the QR code scanner instead.",
  "qrInFileNotFound": "No QR code was found in the selected image.",
  "qrInFileNotFound2": "You can show me where the QR code is located.",
  "qrInFileNotFound3": "I expect i will find the code if it is in the middle of the marked area.",
  "qrNotFound": "No QR code found!",
  "rename": "Rename",
  "renameToken": "Rename token",
  "renameTokenFolder": "Rename folder",
  "renewSecretsButtonText": "Renew secrets",
  "renewSecretsDialogText": "You can renew the secrets of the tokens. This is useful if you suspect that the secrets have been compromised.",
  "renewSecretsDialogTitle": "Renew Token Secrets",
  "replaceButton": "Replace",
  "requestInfo": "Sent by {issuer} for your account: “{account}“",
  "requestPushChallengesPeriodically": "Request push challenges from the server periodically. Enable this if push challenges are not received normally.",
  "requestTriggerdByUserQuestion": "Was this request triggered by you?",
  "retryRolloutButton": "Retry rollout",
  "rolloutStateCompleted": "Rollout completed",
  "rolloutStateGeneratingKeyPair": "Generating key pair",
  "rolloutStateGeneratingKeyPairCompleted": "Generating key pair completed",
  "rolloutStateGeneratingKeyPairFailed": "Generating key pair failed",
  "rolloutStateNotStarted": "Start rollout",
  "rolloutStateParsingResponse": "Parsing response",
  "rolloutStateParsingResponseCompleted": "Parsing response completed",
  "rolloutStateParsingResponseFailed": "Parsing response failed",
  "rolloutStateReceivingFirebaseToken": "Receiving Firebase token",
  "rolloutStateReceivingFirebaseTokenFailed": "Receiving Firebase token failed",
  "rolloutStateSendingPublicKey": "Sending public key",
  "rolloutStateSendingPublicKeyCompleted": "Sending public key completed",
  "rolloutStateSendingPublicKeyFailed": "Sending public key failed",
  "saveButton": "Save",
  "scanQrCode": "Scan QR-Code",
  "scanThisQrWithNewDevice": "Scan this QR code with your new device to import the token.",
  "secondsUntilNextOTP": "Seconds until next OTP",
  "secretIsRequired": "Secret is required",
  "secretKey": "Secret key",
  "selectAll": "Select all",
  "selectFile": "Select file",
  "selectImportSource": "Select import source",
  "selectImportType": "How do you want to import the tokens?",
  "selectTokensToExport": "{count, plural, one{Select the token to be exported} other{Select the tokens to be exported}}",
  "selectTokensToExportHelpContent1": "If a token is not listed, it is not guaranteed that it is not a privacyIDEA token.",
  "selectTokensToExportHelpContent2": "Currently only manually added and imported tokens are exportable.",
  "selectTokensToExportHelpContent3": "We are working on a solution to differentiate between privacyIDEA tokens and private tokens.",
  "selectTokensToExportHelpContent4": "You can obtain a new QR code from the service from which you received the token.",
  "selectTokensToExportHelpTitle": "Is your token not listed?",
  "send": "Send",
  "sendErrorDialogBody": "An unexpected error occurred in the application. The information below can be sent to the developers by email to help prevent this error in the future.",
  "sendErrorLogDescription": "A predefined email is created.\nIt contains information about the app, the error and the device.\nYou can edit the email before sending it.\nYou can see here how we use the information:",
  "sendPushRequestResponseFailed": "Failed to send the response.",
  "serverNotReachable": "The server could not be reached.",
  "settings": "Settings",
  "settingsGroupGeneral": "General",
  "showContainerUrlDialogContent": "The container will connect with the server under the following URL:\n{url}",
  "showContainerUrlDialogSslWarning": "SSL has been deactivated, which is a security risk. Do you want to continue?",
  "showContainerUrlDialogTitle": "Confirm Server URL",
  "showDetails": "Show details",
  "showErrorLog": "Show",
  "showPrivacyPolicy": "Show privacy policy",
  "signInTitle": "Authentication required",
  "someTokensDoNotSupportPolling": "Some of the tokens are outdated and do not support polling",
  "startTransferButtonText": "Start transfer",
  "statusCode": "Status code: {statusCode}",
  "sync": "Sync",
  "syncContainerFailed": "Container synchronization failed",
  "syncContainerNotFoundDialogContent": "The container could not be found on the server. Do you want to delete it from the app?",
  "syncContainerNotFoundDialogTitle": "Container {serial} not found",
  "syncFbTokenFailed": "Synchronization failed for the following tokens, please try again.",
  "syncFbTokenManuallyWhenNetworkIsAvailable": "Please synchronize the push tokens manually via the settings when a network connection is available.",
  "syncState": "Sync State",
  "syncStateCompletedDescription": "Sync completed",
  "syncStateFailedDescription": "Sync Failed",
  "syncStateNotStartedDescription": "Sync not started",
  "syncStateSyncingDescription": "Currently Syncing",
  "synchronizePushTokens": "Synchronize push tokens",
  "synchronizesTokensWithServer": "Synchronizes tokens with the privacyIDEA server.",
  "synchronizingTokens": "Synchronizing tokens.",
  "theSecretDoesNotFitTheCurrentEncoding": "The secret does not fit the current encoding",
  "theme": "Theme",
  "timeOut": "Time out",
  "tokenDataParseError": "Token data could not be parsed",
  "tokenDetails": "Token details",
  "tokenLinkImport": "Token link",
  "tokenSerial": "Token serial",
  "tokensAreEncrypted": "The tokens are encrypted. Please enter the password to decrypt them.",
  "tokensDoNotSupportSynchronization": "The following tokens do not support synchronization and must be rolled out again:",
  "tokensSuccessfullyDecrypted": "The tokens have been successfully decrypted and can now be imported.",
  "transferButton": "Transfer",
  "transferContainerDialogContent1": "You can transfer the container to another device. The container is transferred via a QR code.",
  "transferContainerDialogContent2": "An active internet connection is required for this process.",
  "transferContainerDialogTitle": "Transfer Container",
  "transferContainerFailed": "Failed to start transfer.",
  "transferContainerScanQrCode": "Scan the QR code on the new device to transfer the container.",
  "transferContainerSuccessDialogContent1": "The container has been transferred successfully to another device.",
  "transferContainerSuccessDialogContent2": "Do you want to delete the container and its corresponding tokens from this device?",
  "transferOfflineTokenDialogContent": "Your container has {count} offline tokens. Which can not be transferred to another device. Do you want to continue?",
  "transferOfflineTokenDialogTitle": "Offline token",
  "twoStepSecretFailed": "The two step secret could not be generated, or was canceled.",
  "type": "Type",
  "unableToCreateToken": "The Token could not be created.",
  "unexpectedError": "An unexpected error occurred.",
  "unknown": "Unknown",
  "unlock": "Unlock",
  "unsupported": "The {name} [{value}] is not supported by this version of the app.",
  "useDeviceLocaleDescription": "Use device language if it is supported, otherwise default to english.",
  "useDeviceLocaleTitle": "Use device language",
  "valueNotAllowed": "Type {type} “{value}” is not a permitted value for “{parameter}”",
  "valueNotAllowedIn": "Type {type} “{value}” is not a valid value for “{parameter}” in “{map}”",
  "verboseLogging": "Verbose logging",
  "versionTitle": "Version",
  "wrongPassword": "Incorrect password",
  "yes": "Yes"
}