// Mocks generated by Mockito 5.4.5 from annotations
// in privacyidea_authenticator/test/tests_app_wrapper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:typed_data' as _i26;

import 'package:http/http.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i25;
import 'package:pointycastle/export.dart' as _i9;
import 'package:privacyidea_authenticator/api/interfaces/container_api.dart'
    as _i20;
import 'package:privacyidea_authenticator/interfaces/repo/introduction_repository.dart'
    as _i15;
import 'package:privacyidea_authenticator/interfaces/repo/push_request_repository.dart'
    as _i16;
import 'package:privacyidea_authenticator/interfaces/repo/settings_repository.dart'
    as _i13;
import 'package:privacyidea_authenticator/interfaces/repo/token_container_repository.dart'
    as _i18;
import 'package:privacyidea_authenticator/interfaces/repo/token_folder_repository.dart'
    as _i14;
import 'package:privacyidea_authenticator/interfaces/repo/token_repository.dart'
    as _i10;
import 'package:privacyidea_authenticator/model/api_results/pi_server_results/pi_server_result_value.dart'
    as _i7;
import 'package:privacyidea_authenticator/model/enums/ec_key_algorithm.dart'
    as _i28;
import 'package:privacyidea_authenticator/model/push_request.dart' as _i17;
import 'package:privacyidea_authenticator/model/riverpod_states/introduction_state.dart'
    as _i4;
import 'package:privacyidea_authenticator/model/riverpod_states/push_request_state.dart'
    as _i5;
import 'package:privacyidea_authenticator/model/riverpod_states/settings_state.dart'
    as _i2;
import 'package:privacyidea_authenticator/model/riverpod_states/token_container_state.dart'
    as _i6;
import 'package:privacyidea_authenticator/model/riverpod_states/token_folder_state.dart'
    as _i3;
import 'package:privacyidea_authenticator/model/riverpod_states/token_state.dart'
    as _i22;
import 'package:privacyidea_authenticator/model/token_container.dart' as _i19;
import 'package:privacyidea_authenticator/model/tokens/push_token.dart' as _i27;
import 'package:privacyidea_authenticator/model/tokens/token.dart' as _i12;
import 'package:privacyidea_authenticator/utils/ecc_utils.dart' as _i21;
import 'package:privacyidea_authenticator/utils/privacyidea_io_client.dart'
    as _i23;
import 'package:privacyidea_authenticator/utils/rsa_utils.dart' as _i24;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSettingsState_0 extends _i1.SmartFake implements _i2.SettingsState {
  _FakeSettingsState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenFolderState_1 extends _i1.SmartFake
    implements _i3.TokenFolderState {
  _FakeTokenFolderState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIntroductionState_2 extends _i1.SmartFake
    implements _i4.IntroductionState {
  _FakeIntroductionState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePushRequestState_3 extends _i1.SmartFake
    implements _i5.PushRequestState {
  _FakePushRequestState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenContainerState_4 extends _i1.SmartFake
    implements _i6.TokenContainerState {
  _FakeTokenContainerState_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeContainerFinalizationResponse_5 extends _i1.SmartFake
    implements _i7.ContainerFinalizationResponse {
  _FakeContainerFinalizationResponse_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferQrData_6 extends _i1.SmartFake
    implements _i7.TransferQrData {
  _FakeTransferQrData_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUnregisterContainerResult_7 extends _i1.SmartFake
    implements _i7.UnregisterContainerResult {
  _FakeUnregisterContainerResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_8 extends _i1.SmartFake implements _i8.Response {
  _FakeResponse_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRSAPublicKey_9 extends _i1.SmartFake implements _i9.RSAPublicKey {
  _FakeRSAPublicKey_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRSAPrivateKey_10 extends _i1.SmartFake implements _i9.RSAPrivateKey {
  _FakeRSAPrivateKey_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAsymmetricKeyPair_11<B extends _i9.PublicKey,
        V extends _i9.PrivateKey> extends _i1.SmartFake
    implements _i9.AsymmetricKeyPair<B, V> {
  _FakeAsymmetricKeyPair_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeECPublicKey_12 extends _i1.SmartFake implements _i9.ECPublicKey {
  _FakeECPublicKey_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeECPrivateKey_13 extends _i1.SmartFake implements _i9.ECPrivateKey {
  _FakeECPrivateKey_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenRepository extends _i1.Mock implements _i10.TokenRepository {
  @override
  _i11.Future<_i12.Token?> loadToken(String? id) => (super.noSuchMethod(
        Invocation.method(
          #loadToken,
          [id],
        ),
        returnValue: _i11.Future<_i12.Token?>.value(),
        returnValueForMissingStub: _i11.Future<_i12.Token?>.value(),
      ) as _i11.Future<_i12.Token?>);

  @override
  _i11.Future<List<_i12.Token>> loadTokens() => (super.noSuchMethod(
        Invocation.method(
          #loadTokens,
          [],
        ),
        returnValue: _i11.Future<List<_i12.Token>>.value(<_i12.Token>[]),
        returnValueForMissingStub:
            _i11.Future<List<_i12.Token>>.value(<_i12.Token>[]),
      ) as _i11.Future<List<_i12.Token>>);

  @override
  _i11.Future<bool> saveOrReplaceToken(_i12.Token? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveOrReplaceToken,
          [token],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<List<T>> saveOrReplaceTokens<T extends _i12.Token>(
          List<T>? tokens) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveOrReplaceTokens,
          [tokens],
        ),
        returnValue: _i11.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i11.Future<List<T>>.value(<T>[]),
      ) as _i11.Future<List<T>>);

  @override
  _i11.Future<bool> deleteToken(_i12.Token? token) => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [token],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<List<T>> deleteTokens<T extends _i12.Token>(List<T>? tokens) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTokens,
          [tokens],
        ),
        returnValue: _i11.Future<List<T>>.value(<T>[]),
        returnValueForMissingStub: _i11.Future<List<T>>.value(<T>[]),
      ) as _i11.Future<List<T>>);
}

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i13.SettingsRepository {
  @override
  _i11.Future<bool> saveSettings(_i2.SettingsState? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSettings,
          [settings],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i2.SettingsState> loadSettings() => (super.noSuchMethod(
        Invocation.method(
          #loadSettings,
          [],
        ),
        returnValue: _i11.Future<_i2.SettingsState>.value(_FakeSettingsState_0(
          this,
          Invocation.method(
            #loadSettings,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i2.SettingsState>.value(_FakeSettingsState_0(
          this,
          Invocation.method(
            #loadSettings,
            [],
          ),
        )),
      ) as _i11.Future<_i2.SettingsState>);
}

/// A class which mocks [TokenFolderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenFolderRepository extends _i1.Mock
    implements _i14.TokenFolderRepository {
  @override
  _i11.Future<bool> saveState(_i3.TokenFolderState? state) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveState,
          [state],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i3.TokenFolderState> loadState() => (super.noSuchMethod(
        Invocation.method(
          #loadState,
          [],
        ),
        returnValue:
            _i11.Future<_i3.TokenFolderState>.value(_FakeTokenFolderState_1(
          this,
          Invocation.method(
            #loadState,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i3.TokenFolderState>.value(_FakeTokenFolderState_1(
          this,
          Invocation.method(
            #loadState,
            [],
          ),
        )),
      ) as _i11.Future<_i3.TokenFolderState>);
}

/// A class which mocks [IntroductionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIntroductionRepository extends _i1.Mock
    implements _i15.IntroductionRepository {
  @override
  _i11.Future<bool> saveCompletedIntroductions(
          _i4.IntroductionState? introductions) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCompletedIntroductions,
          [introductions],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i4.IntroductionState> loadCompletedIntroductions() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCompletedIntroductions,
          [],
        ),
        returnValue:
            _i11.Future<_i4.IntroductionState>.value(_FakeIntroductionState_2(
          this,
          Invocation.method(
            #loadCompletedIntroductions,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i4.IntroductionState>.value(_FakeIntroductionState_2(
          this,
          Invocation.method(
            #loadCompletedIntroductions,
            [],
          ),
        )),
      ) as _i11.Future<_i4.IntroductionState>);
}

/// A class which mocks [PushRequestRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushRequestRepository extends _i1.Mock
    implements _i16.PushRequestRepository {
  @override
  _i11.Future<_i5.PushRequestState> loadState() => (super.noSuchMethod(
        Invocation.method(
          #loadState,
          [],
        ),
        returnValue:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #loadState,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #loadState,
            [],
          ),
        )),
      ) as _i11.Future<_i5.PushRequestState>);

  @override
  _i11.Future<void> saveState(_i5.PushRequestState? pushRequestState) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveState,
          [pushRequestState],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> clearState() => (super.noSuchMethod(
        Invocation.method(
          #clearState,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<_i5.PushRequestState> addRequest(
    _i17.PushRequest? pushRequest, {
    _i5.PushRequestState? state,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRequest,
          [pushRequest],
          {#state: state},
        ),
        returnValue:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #addRequest,
            [pushRequest],
            {#state: state},
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #addRequest,
            [pushRequest],
            {#state: state},
          ),
        )),
      ) as _i11.Future<_i5.PushRequestState>);

  @override
  _i11.Future<_i5.PushRequestState> removeRequest(
    _i17.PushRequest? pushRequest, {
    _i5.PushRequestState? state,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeRequest,
          [pushRequest],
          {#state: state},
        ),
        returnValue:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #removeRequest,
            [pushRequest],
            {#state: state},
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i5.PushRequestState>.value(_FakePushRequestState_3(
          this,
          Invocation.method(
            #removeRequest,
            [pushRequest],
            {#state: state},
          ),
        )),
      ) as _i11.Future<_i5.PushRequestState>);
}

/// A class which mocks [TokenContainerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenContainerRepository extends _i1.Mock
    implements _i18.TokenContainerRepository {
  @override
  _i11.Future<_i6.TokenContainerState> loadContainerState() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadContainerState,
          [],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #loadContainerState,
            [],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #loadContainerState,
            [],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);

  @override
  _i11.Future<_i6.TokenContainerState> saveContainerState(
          _i6.TokenContainerState? containerState) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveContainerState,
          [containerState],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainerState,
            [containerState],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainerState,
            [containerState],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);

  @override
  _i11.Future<_i6.TokenContainerState> saveContainerList(
          List<_i19.TokenContainer>? containerList) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveContainerList,
          [containerList],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainerList,
            [containerList],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainerList,
            [containerList],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);

  @override
  _i11.Future<_i6.TokenContainerState> deleteContainer(String? serial) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteContainer,
          [serial],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #deleteContainer,
            [serial],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #deleteContainer,
            [serial],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);

  @override
  _i11.Future<_i6.TokenContainerState> deleteAllContainer() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllContainer,
          [],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #deleteAllContainer,
            [],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #deleteAllContainer,
            [],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);

  @override
  _i11.Future<_i19.TokenContainer?> loadContainer(String? serial) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadContainer,
          [serial],
        ),
        returnValue: _i11.Future<_i19.TokenContainer?>.value(),
        returnValueForMissingStub: _i11.Future<_i19.TokenContainer?>.value(),
      ) as _i11.Future<_i19.TokenContainer?>);

  @override
  _i11.Future<_i6.TokenContainerState> saveContainer(
          _i19.TokenContainer? container) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveContainer,
          [container],
        ),
        returnValue: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainer,
            [container],
          ),
        )),
        returnValueForMissingStub: _i11.Future<_i6.TokenContainerState>.value(
            _FakeTokenContainerState_4(
          this,
          Invocation.method(
            #saveContainer,
            [container],
          ),
        )),
      ) as _i11.Future<_i6.TokenContainerState>);
}

/// A class which mocks [TokenContainerApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenContainerApi extends _i1.Mock implements _i20.TokenContainerApi {
  @override
  _i11.Future<_i7.ContainerFinalizationResponse> finalizeContainer(
    _i19.TokenContainerUnfinalized? container,
    _i21.EccUtils? eccUtils,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #finalizeContainer,
          [
            container,
            eccUtils,
          ],
        ),
        returnValue: _i11.Future<_i7.ContainerFinalizationResponse>.value(
            _FakeContainerFinalizationResponse_5(
          this,
          Invocation.method(
            #finalizeContainer,
            [
              container,
              eccUtils,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i7.ContainerFinalizationResponse>.value(
                _FakeContainerFinalizationResponse_5(
          this,
          Invocation.method(
            #finalizeContainer,
            [
              container,
              eccUtils,
            ],
          ),
        )),
      ) as _i11.Future<_i7.ContainerFinalizationResponse>);

  @override
  _i11.Future<_i7.TransferQrData> getRolloverQrData(
          _i19.TokenContainerFinalized? container) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRolloverQrData,
          [container],
        ),
        returnValue:
            _i11.Future<_i7.TransferQrData>.value(_FakeTransferQrData_6(
          this,
          Invocation.method(
            #getRolloverQrData,
            [container],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i7.TransferQrData>.value(_FakeTransferQrData_6(
          this,
          Invocation.method(
            #getRolloverQrData,
            [container],
          ),
        )),
      ) as _i11.Future<_i7.TransferQrData>);

  @override
  _i11.Future<_i20.ContainerSyncUpdates?> sync(
    _i19.TokenContainerFinalized? container,
    _i22.TokenState? tokenState, {
    bool? isInitSync,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sync,
          [
            container,
            tokenState,
          ],
          {#isInitSync: isInitSync},
        ),
        returnValue: _i11.Future<_i20.ContainerSyncUpdates?>.value(),
        returnValueForMissingStub:
            _i11.Future<_i20.ContainerSyncUpdates?>.value(),
      ) as _i11.Future<_i20.ContainerSyncUpdates?>);

  @override
  _i11.Future<_i7.UnregisterContainerResult> unregister(
          _i19.TokenContainerFinalized? container) =>
      (super.noSuchMethod(
        Invocation.method(
          #unregister,
          [container],
        ),
        returnValue: _i11.Future<_i7.UnregisterContainerResult>.value(
            _FakeUnregisterContainerResult_7(
          this,
          Invocation.method(
            #unregister,
            [container],
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i7.UnregisterContainerResult>.value(
                _FakeUnregisterContainerResult_7(
          this,
          Invocation.method(
            #unregister,
            [container],
          ),
        )),
      ) as _i11.Future<_i7.UnregisterContainerResult>);
}

/// A class which mocks [PrivacyideaIOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrivacyideaIOClient extends _i1.Mock
    implements _i23.PrivacyideaIOClient {
  @override
  _i11.Future<bool> triggerNetworkAccessPermission({
    required Uri? url,
    bool? sslVerify = true,
    bool? isRetry = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #triggerNetworkAccessPermission,
          [],
          {
            #url: url,
            #sslVerify: sslVerify,
            #isRetry: isRetry,
          },
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i8.Response> doPost({
    required Uri? url,
    required Map<String, String?>? body,
    bool? sslVerify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #doPost,
          [],
          {
            #url: url,
            #body: body,
            #sslVerify: sslVerify,
          },
        ),
        returnValue: _i11.Future<_i8.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #doPost,
            [],
            {
              #url: url,
              #body: body,
              #sslVerify: sslVerify,
            },
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i8.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #doPost,
            [],
            {
              #url: url,
              #body: body,
              #sslVerify: sslVerify,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response>);

  @override
  _i11.Future<_i8.Response> doGet({
    required Uri? url,
    required Map<String, String?>? parameters,
    bool? sslVerify = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #doGet,
          [],
          {
            #url: url,
            #parameters: parameters,
            #sslVerify: sslVerify,
          },
        ),
        returnValue: _i11.Future<_i8.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #doGet,
            [],
            {
              #url: url,
              #parameters: parameters,
              #sslVerify: sslVerify,
            },
          ),
        )),
        returnValueForMissingStub:
            _i11.Future<_i8.Response>.value(_FakeResponse_8(
          this,
          Invocation.method(
            #doGet,
            [],
            {
              #url: url,
              #parameters: parameters,
              #sslVerify: sslVerify,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response>);
}

/// A class which mocks [RsaUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockRsaUtils extends _i1.Mock implements _i24.RsaUtils {
  @override
  _i9.RSAPublicKey deserializeRSAPublicKeyPKCS1(String? keyStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserializeRSAPublicKeyPKCS1,
          [keyStr],
        ),
        returnValue: _FakeRSAPublicKey_9(
          this,
          Invocation.method(
            #deserializeRSAPublicKeyPKCS1,
            [keyStr],
          ),
        ),
        returnValueForMissingStub: _FakeRSAPublicKey_9(
          this,
          Invocation.method(
            #deserializeRSAPublicKeyPKCS1,
            [keyStr],
          ),
        ),
      ) as _i9.RSAPublicKey);

  @override
  String serializeRSAPublicKeyPKCS1(_i9.RSAPublicKey? publicKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #serializeRSAPublicKeyPKCS1,
          [publicKey],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPublicKeyPKCS1,
            [publicKey],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPublicKeyPKCS1,
            [publicKey],
          ),
        ),
      ) as String);

  @override
  _i9.RSAPublicKey deserializeRSAPublicKeyPKCS8(String? keyStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserializeRSAPublicKeyPKCS8,
          [keyStr],
        ),
        returnValue: _FakeRSAPublicKey_9(
          this,
          Invocation.method(
            #deserializeRSAPublicKeyPKCS8,
            [keyStr],
          ),
        ),
        returnValueForMissingStub: _FakeRSAPublicKey_9(
          this,
          Invocation.method(
            #deserializeRSAPublicKeyPKCS8,
            [keyStr],
          ),
        ),
      ) as _i9.RSAPublicKey);

  @override
  String serializeRSAPublicKeyPKCS8(_i9.RSAPublicKey? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #serializeRSAPublicKeyPKCS8,
          [key],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPublicKeyPKCS8,
            [key],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPublicKeyPKCS8,
            [key],
          ),
        ),
      ) as String);

  @override
  String serializeRSAPrivateKeyPKCS1(_i9.RSAPrivateKey? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #serializeRSAPrivateKeyPKCS1,
          [key],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPrivateKeyPKCS1,
            [key],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeRSAPrivateKeyPKCS1,
            [key],
          ),
        ),
      ) as String);

  @override
  _i9.RSAPrivateKey deserializeRSAPrivateKeyPKCS1(String? keyStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserializeRSAPrivateKeyPKCS1,
          [keyStr],
        ),
        returnValue: _FakeRSAPrivateKey_10(
          this,
          Invocation.method(
            #deserializeRSAPrivateKeyPKCS1,
            [keyStr],
          ),
        ),
        returnValueForMissingStub: _FakeRSAPrivateKey_10(
          this,
          Invocation.method(
            #deserializeRSAPrivateKeyPKCS1,
            [keyStr],
          ),
        ),
      ) as _i9.RSAPrivateKey);

  @override
  bool verifyRSASignature(
    _i9.RSAPublicKey? publicKey,
    _i26.Uint8List? signedMessage,
    _i26.Uint8List? signature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyRSASignature,
          [
            publicKey,
            signedMessage,
            signature,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i11.Future<String?> trySignWithToken(
    _i27.PushToken? token,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trySignWithToken,
          [
            token,
            message,
          ],
        ),
        returnValue: _i11.Future<String?>.value(),
        returnValueForMissingStub: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);

  @override
  _i11.Future<_i9.AsymmetricKeyPair<_i9.RSAPublicKey, _i9.RSAPrivateKey>>
      generateRSAKeyPair() => (super.noSuchMethod(
            Invocation.method(
              #generateRSAKeyPair,
              [],
            ),
            returnValue: _i11.Future<
                    _i9.AsymmetricKeyPair<_i9.RSAPublicKey,
                        _i9.RSAPrivateKey>>.value(
                _FakeAsymmetricKeyPair_11<_i9.RSAPublicKey, _i9.RSAPrivateKey>(
              this,
              Invocation.method(
                #generateRSAKeyPair,
                [],
              ),
            )),
            returnValueForMissingStub: _i11.Future<
                    _i9.AsymmetricKeyPair<_i9.RSAPublicKey,
                        _i9.RSAPrivateKey>>.value(
                _FakeAsymmetricKeyPair_11<_i9.RSAPublicKey, _i9.RSAPrivateKey>(
              this,
              Invocation.method(
                #generateRSAKeyPair,
                [],
              ),
            )),
          ) as _i11.Future<
              _i9.AsymmetricKeyPair<_i9.RSAPublicKey, _i9.RSAPrivateKey>>);

  @override
  String createBase32Signature(
    _i9.RSAPrivateKey? privateKey,
    _i26.Uint8List? dataToSign,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createBase32Signature,
          [
            privateKey,
            dataToSign,
          ],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #createBase32Signature,
            [
              privateKey,
              dataToSign,
            ],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #createBase32Signature,
            [
              privateKey,
              dataToSign,
            ],
          ),
        ),
      ) as String);

  @override
  _i26.Uint8List createRSASignature(
    _i9.RSAPrivateKey? privateKey,
    _i26.Uint8List? dataToSign,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRSASignature,
          [
            privateKey,
            dataToSign,
          ],
        ),
        returnValue: _i26.Uint8List(0),
        returnValueForMissingStub: _i26.Uint8List(0),
      ) as _i26.Uint8List);
}

/// A class which mocks [EccUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockEccUtils extends _i1.Mock implements _i21.EccUtils {
  @override
  String serializeECPublicKey(_i9.ECPublicKey? publicKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #serializeECPublicKey,
          [publicKey],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeECPublicKey,
            [publicKey],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeECPublicKey,
            [publicKey],
          ),
        ),
      ) as String);

  @override
  _i9.ECPublicKey deserializeECPublicKey(String? ecPublicKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserializeECPublicKey,
          [ecPublicKey],
        ),
        returnValue: _FakeECPublicKey_12(
          this,
          Invocation.method(
            #deserializeECPublicKey,
            [ecPublicKey],
          ),
        ),
        returnValueForMissingStub: _FakeECPublicKey_12(
          this,
          Invocation.method(
            #deserializeECPublicKey,
            [ecPublicKey],
          ),
        ),
      ) as _i9.ECPublicKey);

  @override
  String serializeECPrivateKey(_i9.ECPrivateKey? ecPrivateKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #serializeECPrivateKey,
          [ecPrivateKey],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeECPrivateKey,
            [ecPrivateKey],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #serializeECPrivateKey,
            [ecPrivateKey],
          ),
        ),
      ) as String);

  @override
  _i9.ECPrivateKey deserializeECPrivateKey(String? ecPrivateKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #deserializeECPrivateKey,
          [ecPrivateKey],
        ),
        returnValue: _FakeECPrivateKey_13(
          this,
          Invocation.method(
            #deserializeECPrivateKey,
            [ecPrivateKey],
          ),
        ),
        returnValueForMissingStub: _FakeECPrivateKey_13(
          this,
          Invocation.method(
            #deserializeECPrivateKey,
            [ecPrivateKey],
          ),
        ),
      ) as _i9.ECPrivateKey);

  @override
  String signWithPrivateKey(
    _i9.ECPrivateKey? privateKey,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signWithPrivateKey,
          [
            privateKey,
            message,
          ],
        ),
        returnValue: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #signWithPrivateKey,
            [
              privateKey,
              message,
            ],
          ),
        ),
        returnValueForMissingStub: _i25.dummyValue<String>(
          this,
          Invocation.method(
            #signWithPrivateKey,
            [
              privateKey,
              message,
            ],
          ),
        ),
      ) as String);

  @override
  _i9.AsymmetricKeyPair<_i9.ECPublicKey, _i9.ECPrivateKey> generateKeyPair(
          _i28.EcKeyAlgorithm? keyAlgorithm) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateKeyPair,
          [keyAlgorithm],
        ),
        returnValue:
            _FakeAsymmetricKeyPair_11<_i9.ECPublicKey, _i9.ECPrivateKey>(
          this,
          Invocation.method(
            #generateKeyPair,
            [keyAlgorithm],
          ),
        ),
        returnValueForMissingStub:
            _FakeAsymmetricKeyPair_11<_i9.ECPublicKey, _i9.ECPrivateKey>(
          this,
          Invocation.method(
            #generateKeyPair,
            [keyAlgorithm],
          ),
        ),
      ) as _i9.AsymmetricKeyPair<_i9.ECPublicKey, _i9.ECPrivateKey>);

  @override
  bool validateSignature(
    _i9.ECPublicKey? publicKey,
    String? signature,
    String? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateSignature,
          [
            publicKey,
            signature,
            message,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
