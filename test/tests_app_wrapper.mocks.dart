// Mocks generated by Mockito 5.4.6 from annotations
// in privacyidea_authenticator/test/tests_app_wrapper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;
import 'dart:typed_data' as _i28;

import 'package:firebase_core/firebase_core.dart' as _i31;
import 'package:firebase_messaging/firebase_messaging.dart' as _i32;
import 'package:flutter/foundation.dart' as _i35;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i11;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i19;
import 'package:pointycastle/export.dart' as _i7;
import 'package:privacyidea_authenticator/api/interfaces/container_api.dart'
    as _i25;
import 'package:privacyidea_authenticator/interfaces/repo/introduction_repository.dart'
    as _i17;
import 'package:privacyidea_authenticator/interfaces/repo/push_request_repository.dart'
    as _i20;
import 'package:privacyidea_authenticator/interfaces/repo/settings_repository.dart'
    as _i15;
import 'package:privacyidea_authenticator/interfaces/repo/token_container_repository.dart'
    as _i22;
import 'package:privacyidea_authenticator/interfaces/repo/token_folder_repository.dart'
    as _i16;
import 'package:privacyidea_authenticator/interfaces/repo/token_repository.dart'
    as _i12;
import 'package:privacyidea_authenticator/model/api_results/pi_server_results/pi_server_result_value.dart'
    as _i5;
import 'package:privacyidea_authenticator/model/enums/ec_key_algorithm.dart'
    as _i30;
import 'package:privacyidea_authenticator/model/push_request.dart' as _i21;
import 'package:privacyidea_authenticator/model/riverpod_states/introduction_state.dart'
    as _i18;
import 'package:privacyidea_authenticator/model/riverpod_states/push_request_state.dart'
    as _i4;
import 'package:privacyidea_authenticator/model/riverpod_states/settings_state.dart'
    as _i2;
import 'package:privacyidea_authenticator/model/riverpod_states/token_container_state.dart'
    as _i23;
import 'package:privacyidea_authenticator/model/riverpod_states/token_folder_state.dart'
    as _i3;
import 'package:privacyidea_authenticator/model/riverpod_states/token_state.dart'
    as _i27;
import 'package:privacyidea_authenticator/model/token_container.dart' as _i24;
import 'package:privacyidea_authenticator/model/tokens/push_token.dart' as _i29;
import 'package:privacyidea_authenticator/model/tokens/token.dart' as _i14;
import 'package:privacyidea_authenticator/repo/secure_storage.dart' as _i36;
import 'package:privacyidea_authenticator/utils/allow_screenshot_utils.dart'
    as _i34;
import 'package:privacyidea_authenticator/utils/ecc_utils.dart' as _i26;
import 'package:privacyidea_authenticator/utils/firebase_utils.dart' as _i8;
import 'package:privacyidea_authenticator/utils/privacyidea_io_client.dart'
    as _i9;
import 'package:privacyidea_authenticator/utils/push_provider.dart' as _i33;
import 'package:privacyidea_authenticator/utils/rsa_utils.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSettingsState_0 extends _i1.SmartFake implements _i2.SettingsState {
  _FakeSettingsState_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTokenFolderState_1 extends _i1.SmartFake
    implements _i3.TokenFolderState {
  _FakeTokenFolderState_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePushRequestState_2 extends _i1.SmartFake
    implements _i4.PushRequestState {
  _FakePushRequestState_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeContainerFinalizationResponse_3 extends _i1.SmartFake
    implements _i5.ContainerFinalizationResponse {
  _FakeContainerFinalizationResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakeTransferQrData_4 extends _i1.SmartFake
    implements _i5.TransferQrData {
  _FakeTransferQrData_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUnregisterContainerResult_5 extends _i1.SmartFake
    implements _i5.UnregisterContainerResult {
  _FakeUnregisterContainerResult_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_6 extends _i1.SmartFake implements _i6.Response {
  _FakeResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRSAPublicKey_7 extends _i1.SmartFake implements _i7.RSAPublicKey {
  _FakeRSAPublicKey_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRSAPrivateKey_8 extends _i1.SmartFake implements _i7.RSAPrivateKey {
  _FakeRSAPrivateKey_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAsymmetricKeyPair_9<
  B extends _i7.PublicKey,
  V extends _i7.PrivateKey
>
    extends _i1.SmartFake
    implements _i7.AsymmetricKeyPair<B, V> {
  _FakeAsymmetricKeyPair_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeECPublicKey_10 extends _i1.SmartFake implements _i7.ECPublicKey {
  _FakeECPublicKey_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeECPrivateKey_11 extends _i1.SmartFake implements _i7.ECPrivateKey {
  _FakeECPrivateKey_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseUtils_12 extends _i1.SmartFake implements _i8.FirebaseUtils {
  _FakeFirebaseUtils_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePrivacyideaIOClient_13 extends _i1.SmartFake
    implements _i9.PrivacyideaIOClient {
  _FakePrivacyideaIOClient_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRsaUtils_14 extends _i1.SmartFake implements _i10.RsaUtils {
  _FakeRsaUtils_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIOSOptions_15 extends _i1.SmartFake implements _i11.IOSOptions {
  _FakeIOSOptions_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAndroidOptions_16 extends _i1.SmartFake
    implements _i11.AndroidOptions {
  _FakeAndroidOptions_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLinuxOptions_17 extends _i1.SmartFake implements _i11.LinuxOptions {
  _FakeLinuxOptions_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWindowsOptions_18 extends _i1.SmartFake
    implements _i11.WindowsOptions {
  _FakeWindowsOptions_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWebOptions_19 extends _i1.SmartFake implements _i11.WebOptions {
  _FakeWebOptions_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMacOsOptions_20 extends _i1.SmartFake implements _i11.MacOsOptions {
  _FakeMacOsOptions_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFlutterSecureStorage_21 extends _i1.SmartFake
    implements _i11.FlutterSecureStorage {
  _FakeFlutterSecureStorage_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenRepository extends _i1.Mock implements _i12.TokenRepository {
  @override
  _i13.Future<_i14.Token?> loadToken(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#loadToken, [id]),
            returnValue: _i13.Future<_i14.Token?>.value(),
            returnValueForMissingStub: _i13.Future<_i14.Token?>.value(),
          )
          as _i13.Future<_i14.Token?>);

  @override
  _i13.Future<List<_i14.Token>> loadTokens() =>
      (super.noSuchMethod(
            Invocation.method(#loadTokens, []),
            returnValue: _i13.Future<List<_i14.Token>>.value(<_i14.Token>[]),
            returnValueForMissingStub: _i13.Future<List<_i14.Token>>.value(
              <_i14.Token>[],
            ),
          )
          as _i13.Future<List<_i14.Token>>);

  @override
  _i13.Future<bool> saveOrReplaceToken(_i14.Token? token) =>
      (super.noSuchMethod(
            Invocation.method(#saveOrReplaceToken, [token]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<List<T>> saveOrReplaceTokens<T extends _i14.Token>(
    List<T>? tokens,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveOrReplaceTokens, [tokens]),
            returnValue: _i13.Future<List<T>>.value(<T>[]),
            returnValueForMissingStub: _i13.Future<List<T>>.value(<T>[]),
          )
          as _i13.Future<List<T>>);

  @override
  _i13.Future<bool> deleteToken(_i14.Token? token) =>
      (super.noSuchMethod(
            Invocation.method(#deleteToken, [token]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<List<T>> deleteTokens<T extends _i14.Token>(List<T>? tokens) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTokens, [tokens]),
            returnValue: _i13.Future<List<T>>.value(<T>[]),
            returnValueForMissingStub: _i13.Future<List<T>>.value(<T>[]),
          )
          as _i13.Future<List<T>>);
}

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i15.SettingsRepository {
  @override
  _i13.Future<bool> saveSettings(_i2.SettingsState? settings) =>
      (super.noSuchMethod(
            Invocation.method(#saveSettings, [settings]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i2.SettingsState> loadSettings() =>
      (super.noSuchMethod(
            Invocation.method(#loadSettings, []),
            returnValue: _i13.Future<_i2.SettingsState>.value(
              _FakeSettingsState_0(this, Invocation.method(#loadSettings, [])),
            ),
            returnValueForMissingStub: _i13.Future<_i2.SettingsState>.value(
              _FakeSettingsState_0(this, Invocation.method(#loadSettings, [])),
            ),
          )
          as _i13.Future<_i2.SettingsState>);
}

/// A class which mocks [TokenFolderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenFolderRepository extends _i1.Mock
    implements _i16.TokenFolderRepository {
  @override
  _i13.Future<bool> saveState(_i3.TokenFolderState? state) =>
      (super.noSuchMethod(
            Invocation.method(#saveState, [state]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i3.TokenFolderState> loadState() =>
      (super.noSuchMethod(
            Invocation.method(#loadState, []),
            returnValue: _i13.Future<_i3.TokenFolderState>.value(
              _FakeTokenFolderState_1(this, Invocation.method(#loadState, [])),
            ),
            returnValueForMissingStub: _i13.Future<_i3.TokenFolderState>.value(
              _FakeTokenFolderState_1(this, Invocation.method(#loadState, [])),
            ),
          )
          as _i13.Future<_i3.TokenFolderState>);
}

/// A class which mocks [IntroductionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIntroductionRepository extends _i1.Mock
    implements _i17.IntroductionRepository {
  @override
  _i13.Future<bool> saveCompletedIntroductions(
    _i18.IntroductionState? introductions,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveCompletedIntroductions, [introductions]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i18.IntroductionState> loadCompletedIntroductions() =>
      (super.noSuchMethod(
            Invocation.method(#loadCompletedIntroductions, []),
            returnValue: _i13.Future<_i18.IntroductionState>.value(
              _i19.dummyValue<_i18.IntroductionState>(
                this,
                Invocation.method(#loadCompletedIntroductions, []),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i18.IntroductionState>.value(
                  _i19.dummyValue<_i18.IntroductionState>(
                    this,
                    Invocation.method(#loadCompletedIntroductions, []),
                  ),
                ),
          )
          as _i13.Future<_i18.IntroductionState>);
}

/// A class which mocks [PushRequestRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushRequestRepository extends _i1.Mock
    implements _i20.PushRequestRepository {
  @override
  _i13.Future<_i4.PushRequestState> loadState() =>
      (super.noSuchMethod(
            Invocation.method(#loadState, []),
            returnValue: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(this, Invocation.method(#loadState, [])),
            ),
            returnValueForMissingStub: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(this, Invocation.method(#loadState, [])),
            ),
          )
          as _i13.Future<_i4.PushRequestState>);

  @override
  _i13.Future<void> saveState(_i4.PushRequestState? pushRequestState) =>
      (super.noSuchMethod(
            Invocation.method(#saveState, [pushRequestState]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> clearState() =>
      (super.noSuchMethod(
            Invocation.method(#clearState, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<_i4.PushRequestState> addRequest(
    _i21.PushRequest? pushRequest, {
    _i4.PushRequestState? state,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#addRequest, [pushRequest], {#state: state}),
            returnValue: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(
                this,
                Invocation.method(#addRequest, [pushRequest], {#state: state}),
              ),
            ),
            returnValueForMissingStub: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(
                this,
                Invocation.method(#addRequest, [pushRequest], {#state: state}),
              ),
            ),
          )
          as _i13.Future<_i4.PushRequestState>);

  @override
  _i13.Future<_i4.PushRequestState> removeRequest(
    _i21.PushRequest? pushRequest, {
    _i4.PushRequestState? state,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#removeRequest, [pushRequest], {#state: state}),
            returnValue: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(
                this,
                Invocation.method(
                  #removeRequest,
                  [pushRequest],
                  {#state: state},
                ),
              ),
            ),
            returnValueForMissingStub: _i13.Future<_i4.PushRequestState>.value(
              _FakePushRequestState_2(
                this,
                Invocation.method(
                  #removeRequest,
                  [pushRequest],
                  {#state: state},
                ),
              ),
            ),
          )
          as _i13.Future<_i4.PushRequestState>);
}

/// A class which mocks [TokenContainerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenContainerRepository extends _i1.Mock
    implements _i22.TokenContainerRepository {
  @override
  _i13.Future<_i23.TokenContainerState> loadContainerState() =>
      (super.noSuchMethod(
            Invocation.method(#loadContainerState, []),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#loadContainerState, []),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#loadContainerState, []),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);

  @override
  _i13.Future<_i23.TokenContainerState> saveContainerState(
    _i23.TokenContainerState? containerState,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveContainerState, [containerState]),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#saveContainerState, [containerState]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#saveContainerState, [containerState]),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);

  @override
  _i13.Future<_i23.TokenContainerState> saveContainerList(
    List<_i24.TokenContainer>? containerList,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveContainerList, [containerList]),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#saveContainerList, [containerList]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#saveContainerList, [containerList]),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);

  @override
  _i13.Future<_i23.TokenContainerState> deleteContainer(String? serial) =>
      (super.noSuchMethod(
            Invocation.method(#deleteContainer, [serial]),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#deleteContainer, [serial]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#deleteContainer, [serial]),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);

  @override
  _i13.Future<_i23.TokenContainerState> deleteAllContainer() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAllContainer, []),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#deleteAllContainer, []),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#deleteAllContainer, []),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);

  @override
  _i13.Future<_i24.TokenContainer?> loadContainer(String? serial) =>
      (super.noSuchMethod(
            Invocation.method(#loadContainer, [serial]),
            returnValue: _i13.Future<_i24.TokenContainer?>.value(),
            returnValueForMissingStub:
                _i13.Future<_i24.TokenContainer?>.value(),
          )
          as _i13.Future<_i24.TokenContainer?>);

  @override
  _i13.Future<_i23.TokenContainerState> saveContainer(
    _i24.TokenContainer? container,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveContainer, [container]),
            returnValue: _i13.Future<_i23.TokenContainerState>.value(
              _i19.dummyValue<_i23.TokenContainerState>(
                this,
                Invocation.method(#saveContainer, [container]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i23.TokenContainerState>.value(
                  _i19.dummyValue<_i23.TokenContainerState>(
                    this,
                    Invocation.method(#saveContainer, [container]),
                  ),
                ),
          )
          as _i13.Future<_i23.TokenContainerState>);
}

/// A class which mocks [TokenContainerApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenContainerApi extends _i1.Mock implements _i25.TokenContainerApi {
  @override
  _i13.Future<_i5.ContainerFinalizationResponse> finalizeContainer(
    _i24.TokenContainerUnfinalized? container,
    _i26.EccUtils? eccUtils,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#finalizeContainer, [container, eccUtils]),
            returnValue: _i13.Future<_i5.ContainerFinalizationResponse>.value(
              _FakeContainerFinalizationResponse_3(
                this,
                Invocation.method(#finalizeContainer, [container, eccUtils]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i5.ContainerFinalizationResponse>.value(
                  _FakeContainerFinalizationResponse_3(
                    this,
                    Invocation.method(#finalizeContainer, [
                      container,
                      eccUtils,
                    ]),
                  ),
                ),
          )
          as _i13.Future<_i5.ContainerFinalizationResponse>);

  @override
  _i13.Future<_i5.TransferQrData> getRolloverQrData(
    _i24.TokenContainerFinalized? container,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRolloverQrData, [container]),
            returnValue: _i13.Future<_i5.TransferQrData>.value(
              _FakeTransferQrData_4(
                this,
                Invocation.method(#getRolloverQrData, [container]),
              ),
            ),
            returnValueForMissingStub: _i13.Future<_i5.TransferQrData>.value(
              _FakeTransferQrData_4(
                this,
                Invocation.method(#getRolloverQrData, [container]),
              ),
            ),
          )
          as _i13.Future<_i5.TransferQrData>);

  @override
  _i13.Future<_i25.ContainerSyncUpdates?> sync(
    _i24.TokenContainerFinalized? container,
    _i27.TokenState? tokenState, {
    bool? isInitSync,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #sync,
              [container, tokenState],
              {#isInitSync: isInitSync},
            ),
            returnValue: _i13.Future<_i25.ContainerSyncUpdates?>.value(),
            returnValueForMissingStub:
                _i13.Future<_i25.ContainerSyncUpdates?>.value(),
          )
          as _i13.Future<_i25.ContainerSyncUpdates?>);

  @override
  _i13.Future<_i5.UnregisterContainerResult> unregister(
    _i24.TokenContainerFinalized? container,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#unregister, [container]),
            returnValue: _i13.Future<_i5.UnregisterContainerResult>.value(
              _FakeUnregisterContainerResult_5(
                this,
                Invocation.method(#unregister, [container]),
              ),
            ),
            returnValueForMissingStub:
                _i13.Future<_i5.UnregisterContainerResult>.value(
                  _FakeUnregisterContainerResult_5(
                    this,
                    Invocation.method(#unregister, [container]),
                  ),
                ),
          )
          as _i13.Future<_i5.UnregisterContainerResult>);
}

/// A class which mocks [PrivacyideaIOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockPrivacyideaIOClient extends _i1.Mock
    implements _i9.PrivacyideaIOClient {
  @override
  _i13.Future<bool> triggerNetworkAccessPermission({
    required Uri? url,
    bool? sslVerify = true,
    bool? isRetry = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#triggerNetworkAccessPermission, [], {
              #url: url,
              #sslVerify: sslVerify,
              #isRetry: isRetry,
            }),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<_i6.Response> doPost({
    required Uri? url,
    required Map<String, String?>? body,
    bool? sslVerify = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#doPost, [], {
              #url: url,
              #body: body,
              #sslVerify: sslVerify,
            }),
            returnValue: _i13.Future<_i6.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#doPost, [], {
                  #url: url,
                  #body: body,
                  #sslVerify: sslVerify,
                }),
              ),
            ),
            returnValueForMissingStub: _i13.Future<_i6.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#doPost, [], {
                  #url: url,
                  #body: body,
                  #sslVerify: sslVerify,
                }),
              ),
            ),
          )
          as _i13.Future<_i6.Response>);

  @override
  _i13.Future<_i6.Response> doGet({
    required Uri? url,
    required Map<String, String?>? parameters,
    bool? sslVerify = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#doGet, [], {
              #url: url,
              #parameters: parameters,
              #sslVerify: sslVerify,
            }),
            returnValue: _i13.Future<_i6.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#doGet, [], {
                  #url: url,
                  #parameters: parameters,
                  #sslVerify: sslVerify,
                }),
              ),
            ),
            returnValueForMissingStub: _i13.Future<_i6.Response>.value(
              _FakeResponse_6(
                this,
                Invocation.method(#doGet, [], {
                  #url: url,
                  #parameters: parameters,
                  #sslVerify: sslVerify,
                }),
              ),
            ),
          )
          as _i13.Future<_i6.Response>);
}

/// A class which mocks [RsaUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockRsaUtils extends _i1.Mock implements _i10.RsaUtils {
  @override
  _i7.RSAPublicKey deserializeRSAPublicKeyPKCS1(String? keyStr) =>
      (super.noSuchMethod(
            Invocation.method(#deserializeRSAPublicKeyPKCS1, [keyStr]),
            returnValue: _FakeRSAPublicKey_7(
              this,
              Invocation.method(#deserializeRSAPublicKeyPKCS1, [keyStr]),
            ),
            returnValueForMissingStub: _FakeRSAPublicKey_7(
              this,
              Invocation.method(#deserializeRSAPublicKeyPKCS1, [keyStr]),
            ),
          )
          as _i7.RSAPublicKey);

  @override
  String serializeRSAPublicKeyPKCS1(_i7.RSAPublicKey? publicKey) =>
      (super.noSuchMethod(
            Invocation.method(#serializeRSAPublicKeyPKCS1, [publicKey]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPublicKeyPKCS1, [publicKey]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPublicKeyPKCS1, [publicKey]),
            ),
          )
          as String);

  @override
  _i7.RSAPublicKey deserializeRSAPublicKeyPKCS8(String? keyStr) =>
      (super.noSuchMethod(
            Invocation.method(#deserializeRSAPublicKeyPKCS8, [keyStr]),
            returnValue: _FakeRSAPublicKey_7(
              this,
              Invocation.method(#deserializeRSAPublicKeyPKCS8, [keyStr]),
            ),
            returnValueForMissingStub: _FakeRSAPublicKey_7(
              this,
              Invocation.method(#deserializeRSAPublicKeyPKCS8, [keyStr]),
            ),
          )
          as _i7.RSAPublicKey);

  @override
  String serializeRSAPublicKeyPKCS8(_i7.RSAPublicKey? key) =>
      (super.noSuchMethod(
            Invocation.method(#serializeRSAPublicKeyPKCS8, [key]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPublicKeyPKCS8, [key]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPublicKeyPKCS8, [key]),
            ),
          )
          as String);

  @override
  String serializeRSAPrivateKeyPKCS1(_i7.RSAPrivateKey? key) =>
      (super.noSuchMethod(
            Invocation.method(#serializeRSAPrivateKeyPKCS1, [key]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPrivateKeyPKCS1, [key]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeRSAPrivateKeyPKCS1, [key]),
            ),
          )
          as String);

  @override
  _i7.RSAPrivateKey deserializeRSAPrivateKeyPKCS1(String? keyStr) =>
      (super.noSuchMethod(
            Invocation.method(#deserializeRSAPrivateKeyPKCS1, [keyStr]),
            returnValue: _FakeRSAPrivateKey_8(
              this,
              Invocation.method(#deserializeRSAPrivateKeyPKCS1, [keyStr]),
            ),
            returnValueForMissingStub: _FakeRSAPrivateKey_8(
              this,
              Invocation.method(#deserializeRSAPrivateKeyPKCS1, [keyStr]),
            ),
          )
          as _i7.RSAPrivateKey);

  @override
  bool verifyRSASignature(
    _i7.RSAPublicKey? publicKey,
    _i28.Uint8List? signedMessage,
    _i28.Uint8List? signature,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#verifyRSASignature, [
              publicKey,
              signedMessage,
              signature,
            ]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i13.Future<String?> trySignWithToken(
    _i29.PushToken? token,
    String? message,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#trySignWithToken, [token, message]),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<_i7.AsymmetricKeyPair<_i7.RSAPublicKey, _i7.RSAPrivateKey>>
  generateRSAKeyPair() =>
      (super.noSuchMethod(
            Invocation.method(#generateRSAKeyPair, []),
            returnValue:
                _i13.Future<
                  _i7.AsymmetricKeyPair<_i7.RSAPublicKey, _i7.RSAPrivateKey>
                >.value(
                  _FakeAsymmetricKeyPair_9<_i7.RSAPublicKey, _i7.RSAPrivateKey>(
                    this,
                    Invocation.method(#generateRSAKeyPair, []),
                  ),
                ),
            returnValueForMissingStub:
                _i13.Future<
                  _i7.AsymmetricKeyPair<_i7.RSAPublicKey, _i7.RSAPrivateKey>
                >.value(
                  _FakeAsymmetricKeyPair_9<_i7.RSAPublicKey, _i7.RSAPrivateKey>(
                    this,
                    Invocation.method(#generateRSAKeyPair, []),
                  ),
                ),
          )
          as _i13.Future<
            _i7.AsymmetricKeyPair<_i7.RSAPublicKey, _i7.RSAPrivateKey>
          >);

  @override
  String createBase32Signature(
    _i7.RSAPrivateKey? privateKey,
    _i28.Uint8List? dataToSign,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createBase32Signature, [privateKey, dataToSign]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#createBase32Signature, [
                privateKey,
                dataToSign,
              ]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#createBase32Signature, [
                privateKey,
                dataToSign,
              ]),
            ),
          )
          as String);

  @override
  _i28.Uint8List createRSASignature(
    _i7.RSAPrivateKey? privateKey,
    _i28.Uint8List? dataToSign,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createRSASignature, [privateKey, dataToSign]),
            returnValue: _i28.Uint8List(0),
            returnValueForMissingStub: _i28.Uint8List(0),
          )
          as _i28.Uint8List);
}

/// A class which mocks [EccUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockEccUtils extends _i1.Mock implements _i26.EccUtils {
  @override
  String serializeECPublicKey(_i7.ECPublicKey? publicKey) =>
      (super.noSuchMethod(
            Invocation.method(#serializeECPublicKey, [publicKey]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeECPublicKey, [publicKey]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeECPublicKey, [publicKey]),
            ),
          )
          as String);

  @override
  _i7.ECPublicKey deserializeECPublicKey(String? ecPublicKey) =>
      (super.noSuchMethod(
            Invocation.method(#deserializeECPublicKey, [ecPublicKey]),
            returnValue: _FakeECPublicKey_10(
              this,
              Invocation.method(#deserializeECPublicKey, [ecPublicKey]),
            ),
            returnValueForMissingStub: _FakeECPublicKey_10(
              this,
              Invocation.method(#deserializeECPublicKey, [ecPublicKey]),
            ),
          )
          as _i7.ECPublicKey);

  @override
  String serializeECPrivateKey(_i7.ECPrivateKey? ecPrivateKey) =>
      (super.noSuchMethod(
            Invocation.method(#serializeECPrivateKey, [ecPrivateKey]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeECPrivateKey, [ecPrivateKey]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#serializeECPrivateKey, [ecPrivateKey]),
            ),
          )
          as String);

  @override
  _i7.ECPrivateKey deserializeECPrivateKey(String? ecPrivateKey) =>
      (super.noSuchMethod(
            Invocation.method(#deserializeECPrivateKey, [ecPrivateKey]),
            returnValue: _FakeECPrivateKey_11(
              this,
              Invocation.method(#deserializeECPrivateKey, [ecPrivateKey]),
            ),
            returnValueForMissingStub: _FakeECPrivateKey_11(
              this,
              Invocation.method(#deserializeECPrivateKey, [ecPrivateKey]),
            ),
          )
          as _i7.ECPrivateKey);

  @override
  String signWithPrivateKey(_i7.ECPrivateKey? privateKey, String? message) =>
      (super.noSuchMethod(
            Invocation.method(#signWithPrivateKey, [privateKey, message]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#signWithPrivateKey, [privateKey, message]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#signWithPrivateKey, [privateKey, message]),
            ),
          )
          as String);

  @override
  _i7.AsymmetricKeyPair<_i7.ECPublicKey, _i7.ECPrivateKey> generateKeyPair(
    _i30.EcKeyAlgorithm? keyAlgorithm,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#generateKeyPair, [keyAlgorithm]),
            returnValue:
                _FakeAsymmetricKeyPair_9<_i7.ECPublicKey, _i7.ECPrivateKey>(
                  this,
                  Invocation.method(#generateKeyPair, [keyAlgorithm]),
                ),
            returnValueForMissingStub:
                _FakeAsymmetricKeyPair_9<_i7.ECPublicKey, _i7.ECPrivateKey>(
                  this,
                  Invocation.method(#generateKeyPair, [keyAlgorithm]),
                ),
          )
          as _i7.AsymmetricKeyPair<_i7.ECPublicKey, _i7.ECPrivateKey>);

  @override
  bool validateSignature(
    _i7.ECPublicKey? publicKey,
    String? signature,
    String? message,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#validateSignature, [
              publicKey,
              signature,
              message,
            ]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);
}

/// A class which mocks [FirebaseUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseUtils extends _i1.Mock implements _i8.FirebaseUtils {
  @override
  bool get initializedFirebase =>
      (super.noSuchMethod(
            Invocation.getter(#initializedFirebase),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get initializedHandler =>
      (super.noSuchMethod(
            Invocation.getter(#initializedHandler),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set initializedFirebase(bool? _initializedFirebase) => super.noSuchMethod(
    Invocation.setter(#initializedFirebase, _initializedFirebase),
    returnValueForMissingStub: null,
  );

  @override
  set initializedHandler(bool? _initializedHandler) => super.noSuchMethod(
    Invocation.setter(#initializedHandler, _initializedHandler),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<_i31.FirebaseApp?> initializeApp() =>
      (super.noSuchMethod(
            Invocation.method(#initializeApp, []),
            returnValue: _i13.Future<_i31.FirebaseApp?>.value(),
            returnValueForMissingStub: _i13.Future<_i31.FirebaseApp?>.value(),
          )
          as _i13.Future<_i31.FirebaseApp?>);

  @override
  _i13.Future<void> setupHandler({
    required _i13.Future<void> Function(_i32.RemoteMessage)? foregroundHandler,
    required _i13.Future<void> Function(_i32.RemoteMessage)? backgroundHandler,
    required dynamic Function({String? firebaseToken})? updateFirebaseToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setupHandler, [], {
              #foregroundHandler: foregroundHandler,
              #backgroundHandler: backgroundHandler,
              #updateFirebaseToken: updateFirebaseToken,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> getFBToken() =>
      (super.noSuchMethod(
            Invocation.method(#getFBToken, []),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<bool> deleteFirebaseToken() =>
      (super.noSuchMethod(
            Invocation.method(#deleteFirebaseToken, []),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> setCurrentFirebaseToken(String? str) =>
      (super.noSuchMethod(
            Invocation.method(#setCurrentFirebaseToken, [str]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> getCurrentFirebaseToken() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentFirebaseToken, []),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<void> setNewFirebaseToken(String? str) =>
      (super.noSuchMethod(
            Invocation.method(#setNewFirebaseToken, [str]),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> getNewFirebaseToken() =>
      (super.noSuchMethod(
            Invocation.method(#getNewFirebaseToken, []),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);
}

/// A class which mocks [PushProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushProvider extends _i1.Mock implements _i33.PushProvider {
  @override
  bool get pollingIsEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#pollingIsEnabled),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i8.FirebaseUtils get firebaseUtils =>
      (super.noSuchMethod(
            Invocation.getter(#firebaseUtils),
            returnValue: _FakeFirebaseUtils_12(
              this,
              Invocation.getter(#firebaseUtils),
            ),
            returnValueForMissingStub: _FakeFirebaseUtils_12(
              this,
              Invocation.getter(#firebaseUtils),
            ),
          )
          as _i8.FirebaseUtils);

  @override
  _i9.PrivacyideaIOClient get ioClient =>
      (super.noSuchMethod(
            Invocation.getter(#ioClient),
            returnValue: _FakePrivacyideaIOClient_13(
              this,
              Invocation.getter(#ioClient),
            ),
            returnValueForMissingStub: _FakePrivacyideaIOClient_13(
              this,
              Invocation.getter(#ioClient),
            ),
          )
          as _i9.PrivacyideaIOClient);

  @override
  _i10.RsaUtils get rsaUtils =>
      (super.noSuchMethod(
            Invocation.getter(#rsaUtils),
            returnValue: _FakeRsaUtils_14(this, Invocation.getter(#rsaUtils)),
            returnValueForMissingStub: _FakeRsaUtils_14(
              this,
              Invocation.getter(#rsaUtils),
            ),
          )
          as _i10.RsaUtils);

  @override
  set pollingIsEnabled(bool? _pollingIsEnabled) => super.noSuchMethod(
    Invocation.setter(#pollingIsEnabled, _pollingIsEnabled),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> initFirebase() =>
      (super.noSuchMethod(
            Invocation.method(#initFirebase, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  void setPollingEnabled(bool? enablePolling) => super.noSuchMethod(
    Invocation.method(#setPollingEnabled, [enablePolling]),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> pollForChallenges({required bool? isManually}) =>
      (super.noSuchMethod(
            Invocation.method(#pollForChallenges, [], {
              #isManually: isManually,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> pollForChallenge(
    _i29.PushToken? token, {
    bool? isManually = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #pollForChallenge,
              [token],
              {#isManually: isManually},
            ),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<(List<_i29.PushToken>, List<_i29.PushToken>)?>
  updateAllFirebaseTokens({String? firebaseToken}) =>
      (super.noSuchMethod(
            Invocation.method(#updateAllFirebaseTokens, [], {
              #firebaseToken: firebaseToken,
            }),
            returnValue:
                _i13.Future<
                  (List<_i29.PushToken>, List<_i29.PushToken>)?
                >.value(),
            returnValueForMissingStub:
                _i13.Future<
                  (List<_i29.PushToken>, List<_i29.PushToken>)?
                >.value(),
          )
          as _i13.Future<(List<_i29.PushToken>, List<_i29.PushToken>)?>);

  @override
  void unsubscribe(void Function(_i21.PushRequest)? newRequest) =>
      super.noSuchMethod(
        Invocation.method(#unsubscribe, [newRequest]),
        returnValueForMissingStub: null,
      );

  @override
  void subscribe(void Function(_i21.PushRequest)? newRequest) =>
      super.noSuchMethod(
        Invocation.method(#subscribe, [newRequest]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AllowScreenshotUtils].
///
/// See the documentation for Mockito's code generation for more information.
class MockAllowScreenshotUtils extends _i1.Mock
    implements _i34.AllowScreenshotUtils {
  @override
  _i13.Future<bool> allowScreenshots() =>
      (super.noSuchMethod(
            Invocation.method(#allowScreenshots, []),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> disallowScreenshots() =>
      (super.noSuchMethod(
            Invocation.method(#disallowScreenshots, []),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<bool> toggleAllowScreenshots(bool? oldState) =>
      (super.noSuchMethod(
            Invocation.method(#toggleAllowScreenshots, [oldState]),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i11.FlutterSecureStorage {
  @override
  _i11.IOSOptions get iOptions =>
      (super.noSuchMethod(
            Invocation.getter(#iOptions),
            returnValue: _FakeIOSOptions_15(this, Invocation.getter(#iOptions)),
            returnValueForMissingStub: _FakeIOSOptions_15(
              this,
              Invocation.getter(#iOptions),
            ),
          )
          as _i11.IOSOptions);

  @override
  _i11.AndroidOptions get aOptions =>
      (super.noSuchMethod(
            Invocation.getter(#aOptions),
            returnValue: _FakeAndroidOptions_16(
              this,
              Invocation.getter(#aOptions),
            ),
            returnValueForMissingStub: _FakeAndroidOptions_16(
              this,
              Invocation.getter(#aOptions),
            ),
          )
          as _i11.AndroidOptions);

  @override
  _i11.LinuxOptions get lOptions =>
      (super.noSuchMethod(
            Invocation.getter(#lOptions),
            returnValue: _FakeLinuxOptions_17(
              this,
              Invocation.getter(#lOptions),
            ),
            returnValueForMissingStub: _FakeLinuxOptions_17(
              this,
              Invocation.getter(#lOptions),
            ),
          )
          as _i11.LinuxOptions);

  @override
  _i11.WindowsOptions get wOptions =>
      (super.noSuchMethod(
            Invocation.getter(#wOptions),
            returnValue: _FakeWindowsOptions_18(
              this,
              Invocation.getter(#wOptions),
            ),
            returnValueForMissingStub: _FakeWindowsOptions_18(
              this,
              Invocation.getter(#wOptions),
            ),
          )
          as _i11.WindowsOptions);

  @override
  _i11.WebOptions get webOptions =>
      (super.noSuchMethod(
            Invocation.getter(#webOptions),
            returnValue: _FakeWebOptions_19(
              this,
              Invocation.getter(#webOptions),
            ),
            returnValueForMissingStub: _FakeWebOptions_19(
              this,
              Invocation.getter(#webOptions),
            ),
          )
          as _i11.WebOptions);

  @override
  _i11.MacOsOptions get mOptions =>
      (super.noSuchMethod(
            Invocation.getter(#mOptions),
            returnValue: _FakeMacOsOptions_20(
              this,
              Invocation.getter(#mOptions),
            ),
            returnValueForMissingStub: _FakeMacOsOptions_20(
              this,
              Invocation.getter(#mOptions),
            ),
          )
          as _i11.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i35.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#registerListener, [], {#key: key, #listener: listener}),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterListener({
    required String? key,
    required _i35.ValueChanged<String?>? listener,
  }) => super.noSuchMethod(
    Invocation.method(#unregisterListener, [], {
      #key: key,
      #listener: listener,
    }),
    returnValueForMissingStub: null,
  );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(#unregisterAllListenersForKey, [], {#key: key}),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
    Invocation.method(#unregisterAllListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Future<void> write({
    required String? key,
    required String? value,
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {
              #key: key,
              #value: value,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> read({
    required String? key,
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<bool> containsKey({
    required String? key,
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<bool>.value(false),
            returnValueForMissingStub: _i13.Future<bool>.value(false),
          )
          as _i13.Future<bool>);

  @override
  _i13.Future<void> delete({
    required String? key,
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #key: key,
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<Map<String, String>> readAll({
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<Map<String, String>>.value(
              <String, String>{},
            ),
            returnValueForMissingStub: _i13.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i13.Future<Map<String, String>>);

  @override
  _i13.Future<void> deleteAll({
    _i11.IOSOptions? iOptions,
    _i11.AndroidOptions? aOptions,
    _i11.LinuxOptions? lOptions,
    _i11.WebOptions? webOptions,
    _i11.MacOsOptions? mOptions,
    _i11.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, [], {
              #iOptions: iOptions,
              #aOptions: aOptions,
              #lOptions: lOptions,
              #webOptions: webOptions,
              #mOptions: mOptions,
              #wOptions: wOptions,
            }),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<bool?> isCupertinoProtectedDataAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isCupertinoProtectedDataAvailable, []),
            returnValue: _i13.Future<bool?>.value(),
            returnValueForMissingStub: _i13.Future<bool?>.value(),
          )
          as _i13.Future<bool?>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i36.SecureStorage {
  @override
  _i11.FlutterSecureStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFlutterSecureStorage_21(
              this,
              Invocation.getter(#storage),
            ),
            returnValueForMissingStub: _FakeFlutterSecureStorage_21(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i11.FlutterSecureStorage);

  @override
  String get storagePrefix =>
      (super.noSuchMethod(
            Invocation.getter(#storagePrefix),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.getter(#storagePrefix),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.getter(#storagePrefix),
            ),
          )
          as String);

  @override
  String get seperator =>
      (super.noSuchMethod(
            Invocation.getter(#seperator),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.getter(#seperator),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.getter(#seperator),
            ),
          )
          as String);

  @override
  String getFullKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#getFullKey, [key]),
            returnValue: _i19.dummyValue<String>(
              this,
              Invocation.method(#getFullKey, [key]),
            ),
            returnValueForMissingStub: _i19.dummyValue<String>(
              this,
              Invocation.method(#getFullKey, [key]),
            ),
          )
          as String);

  @override
  _i13.Future<void> write({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#write, [], {#key: key, #value: value}),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<String?> read({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [], {#key: key}),
            returnValue: _i13.Future<String?>.value(),
            returnValueForMissingStub: _i13.Future<String?>.value(),
          )
          as _i13.Future<String?>);

  @override
  _i13.Future<Map<String, String>> readAll() =>
      (super.noSuchMethod(
            Invocation.method(#readAll, []),
            returnValue: _i13.Future<Map<String, String>>.value(
              <String, String>{},
            ),
            returnValueForMissingStub: _i13.Future<Map<String, String>>.value(
              <String, String>{},
            ),
          )
          as _i13.Future<Map<String, String>>);

  @override
  _i13.Future<void> delete({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {#key: key}),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);

  @override
  _i13.Future<void> deleteAll() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAll, []),
            returnValue: _i13.Future<void>.value(),
            returnValueForMissingStub: _i13.Future<void>.value(),
          )
          as _i13.Future<void>);
}
